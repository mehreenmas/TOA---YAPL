Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> lines
Rule 1     lines -> last SEMICOLON
Rule 2     lines -> last SEMICOLON lines
Rule 3     last -> codestmt
Rule 4     last -> output
Rule 5     last -> list
Rule 6     last -> var_assign
Rule 7     last -> var_declare
Rule 8     last -> if_exp
Rule 9     last -> empty
Rule 10    list -> list_declare
Rule 11    list -> list_assign
Rule 12    list -> list_access
Rule 13    list -> list_funcs
Rule 14    list_declare -> NAME FATARROW SLBRAC SRBRAC
Rule 15    list_assign -> NAME EQUAL SLBRAC result SRBRAC
Rule 16    list_access -> NAME SLBRAC INT SRBRAC
Rule 17    list_funcs -> list_pop
Rule 18    list_funcs -> list_push
Rule 19    list_funcs -> list_slice
Rule 20    list_funcs -> list_index
Rule 21    list_pop -> NAME DOT POP LBRAC INT RBRAC
Rule 22    list_push -> NAME DOT PUSH LBRAC INT RBRAC
Rule 23    list_push -> NAME DOT PUSH LBRAC FLOAT RBRAC
Rule 24    list_push -> NAME DOT PUSH LBRAC CHAR RBRAC
Rule 25    list_push -> NAME DOT PUSH LBRAC STRING RBRAC
Rule 26    list_push -> NAME DOT PUSH LBRAC BOOL RBRAC
Rule 27    list_slice -> NAME DOT SLICE LBRAC sliceval RBRAC
Rule 28    sliceval -> INT COLON
Rule 29    sliceval -> COLON INT
Rule 30    sliceval -> INT COLON INT
Rule 31    sliceval -> COLON
Rule 32    list_index -> NAME DOT INDEX LBRAC INT RBRAC
Rule 33    if_exp -> if_statement
Rule 34    if_exp -> if_statement else_statement
Rule 35    if_exp -> if_statement elif_stmt
Rule 36    if_exp -> if_statement elif_stmt else_statement
Rule 37    if_statement -> IF LBRAC codestmt RBRAC block
Rule 38    else_statement -> ELSE block
Rule 39    elif_stmt -> else_if_statement
Rule 40    elif_stmt -> else_if_statement elif_stmt
Rule 41    else_if_statement -> ELSEIF LBRAC codestmt RBRAC block
Rule 42    block -> CLBRAC codeblock CRBRAC
Rule 43    codeblock -> code SEMICOLON
Rule 44    codeblock -> code SEMICOLON codeblock
Rule 45    code -> codestmt
Rule 46    code -> var_assign
Rule 47    code -> var_declare
Rule 48    code -> output
Rule 49    code -> list
Rule 50    code -> if_exp
Rule 51    output -> PRINT LBRAC result RBRAC
Rule 52    result -> printstmt
Rule 53    result -> printstmt COMMA result
Rule 54    result -> list_access
Rule 55    result -> list_access COMMA result
Rule 56    result -> list_funcs
Rule 57    result -> list_funcs COMMA result
Rule 58    printstmt -> codestmt
Rule 59    var_assign -> NAME EQUAL codestmt
Rule 60    var_declare -> TYPE NAME
Rule 61    var_declare -> TYPE NAME EQUAL codestmt
Rule 62    empty -> <empty>
Rule 63    codestmt -> MINUS codestmt
Rule 64    codestmt -> codestmt PLUS codestmt
Rule 65    codestmt -> codestmt MINUS codestmt
Rule 66    codestmt -> codestmt MULTIPLY codestmt
Rule 67    codestmt -> codestmt DIVIDE codestmt
Rule 68    codestmt -> codestmt MOD codestmt
Rule 69    codestmt -> codestmt POWER codestmt
Rule 70    codestmt -> list_funcs PLUS codestmt
Rule 71    codestmt -> list_funcs MINUS codestmt
Rule 72    codestmt -> list_funcs MULTIPLY codestmt
Rule 73    codestmt -> list_funcs DIVIDE codestmt
Rule 74    codestmt -> list_funcs MOD codestmt
Rule 75    codestmt -> list_funcs POWER codestmt
Rule 76    codestmt -> codestmt PLUS list_funcs
Rule 77    codestmt -> codestmt MINUS list_funcs
Rule 78    codestmt -> codestmt MULTIPLY list_funcs
Rule 79    codestmt -> codestmt DIVIDE list_funcs
Rule 80    codestmt -> codestmt MOD list_funcs
Rule 81    codestmt -> codestmt POWER list_funcs
Rule 82    codestmt -> codestmt LESSTHAN codestmt
Rule 83    codestmt -> codestmt GREATERTHAN codestmt
Rule 84    codestmt -> codestmt LESSEQUAL codestmt
Rule 85    codestmt -> codestmt GREATEREQUAL codestmt
Rule 86    codestmt -> codestmt NOTEQUAL codestmt
Rule 87    codestmt -> codestmt EQUALEQUAL codestmt
Rule 88    codestmt -> codestmt AND codestmt
Rule 89    codestmt -> codestmt OR codestmt
Rule 90    codestmt -> LBRAC codestmt RBRAC
Rule 91    codestmt -> NOT codestmt
Rule 92    codestmt -> codestmt INCR
Rule 93    codestmt -> codestmt DECR
Rule 94    codestmt -> NAME
Rule 95    codestmt -> BOOL
Rule 96    codestmt -> CHAR
Rule 97    codestmt -> STRING
Rule 98    codestmt -> INT
Rule 99    codestmt -> FLOAT

Terminals, with rules where they appear

AND                  : 88
BOOL                 : 26 95
CHAR                 : 24 96
CLBRAC               : 42
COLON                : 28 29 30 31
COMMA                : 53 55 57
CRBRAC               : 42
DECR                 : 93
DIVIDE               : 67 73 79
DOT                  : 21 22 23 24 25 26 27 32
ELSE                 : 38
ELSEIF               : 41
EQUAL                : 15 59 61
EQUALEQUAL           : 87
FATARROW             : 14
FLOAT                : 23 99
GREATEREQUAL         : 85
GREATERTHAN          : 83
IF                   : 37
INCR                 : 92
INDEX                : 32
INT                  : 16 21 22 28 29 30 30 32 98
LBRAC                : 21 22 23 24 25 26 27 32 37 41 51 90
LESSEQUAL            : 84
LESSTHAN             : 82
MINUS                : 63 65 71 77
MOD                  : 68 74 80
MULTIPLY             : 66 72 78
NAME                 : 14 15 16 21 22 23 24 25 26 27 32 59 60 61 94
NOT                  : 91
NOTEQUAL             : 86
OR                   : 89
PLUS                 : 64 70 76
POP                  : 21
POWER                : 69 75 81
PRINT                : 51
PUSH                 : 22 23 24 25 26
RBRAC                : 21 22 23 24 25 26 27 32 37 41 51 90
SEMICOLON            : 1 2 43 44
SLBRAC               : 14 15 16
SLICE                : 27
SRBRAC               : 14 15 16
STRING               : 25 97
TYPE                 : 60 61
error                : 

Nonterminals, with rules where they appear

block                : 37 38 41
code                 : 43 44
codeblock            : 42 44
codestmt             : 3 37 41 45 58 59 61 63 64 64 65 65 66 66 67 67 68 68 69 69 70 71 72 73 74 75 76 77 78 79 80 81 82 82 83 83 84 84 85 85 86 86 87 87 88 88 89 89 90 91 92 93
elif_stmt            : 35 36 40
else_if_statement    : 39 40
else_statement       : 34 36
empty                : 9
if_exp               : 8 50
if_statement         : 33 34 35 36
last                 : 1 2
lines                : 2 0
list                 : 5 49
list_access          : 12 54 55
list_assign          : 11
list_declare         : 10
list_funcs           : 13 56 57 70 71 72 73 74 75 76 77 78 79 80 81
list_index           : 20
list_pop             : 17
list_push            : 18
list_slice           : 19
output               : 4 48
printstmt            : 52 53
result               : 15 51 53 55 57
sliceval             : 27
var_assign           : 6 46
var_declare          : 7 47

Parsing method: LALR

state 0

    (0) S' -> . lines
    (1) lines -> . last SEMICOLON
    (2) lines -> . last SEMICOLON lines
    (3) last -> . codestmt
    (4) last -> . output
    (5) last -> . list
    (6) last -> . var_assign
    (7) last -> . var_declare
    (8) last -> . if_exp
    (9) last -> . empty
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (51) output -> . PRINT LBRAC result RBRAC
    (10) list -> . list_declare
    (11) list -> . list_assign
    (12) list -> . list_access
    (13) list -> . list_funcs
    (59) var_assign -> . NAME EQUAL codestmt
    (60) var_declare -> . TYPE NAME
    (61) var_declare -> . TYPE NAME EQUAL codestmt
    (33) if_exp -> . if_statement
    (34) if_exp -> . if_statement else_statement
    (35) if_exp -> . if_statement elif_stmt
    (36) if_exp -> . if_statement elif_stmt else_statement
    (62) empty -> .
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (14) list_declare -> . NAME FATARROW SLBRAC SRBRAC
    (15) list_assign -> . NAME EQUAL SLBRAC result SRBRAC
    (16) list_access -> . NAME SLBRAC INT SRBRAC
    (37) if_statement -> . IF LBRAC codestmt RBRAC block
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 14
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    PRINT           shift and go to state 20
    TYPE            shift and go to state 24
    SEMICOLON       reduce using rule 62 (empty -> .)
    IF              shift and go to state 30

    lines                          shift and go to state 1
    last                           shift and go to state 2
    codestmt                       shift and go to state 3
    output                         shift and go to state 4
    list                           shift and go to state 5
    var_assign                     shift and go to state 6
    var_declare                    shift and go to state 7
    if_exp                         shift and go to state 8
    empty                          shift and go to state 9
    list_funcs                     shift and go to state 11
    list_declare                   shift and go to state 21
    list_assign                    shift and go to state 22
    list_access                    shift and go to state 23
    if_statement                   shift and go to state 25
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 1

    (0) S' -> lines .



state 2

    (1) lines -> last . SEMICOLON
    (2) lines -> last . SEMICOLON lines

    SEMICOLON       shift and go to state 31


state 3

    (3) last -> codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    SEMICOLON       reduce using rule 3 (last -> codestmt .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    MOD             shift and go to state 36
    POWER           shift and go to state 37
    LESSTHAN        shift and go to state 38
    GREATERTHAN     shift and go to state 39
    LESSEQUAL       shift and go to state 40
    GREATEREQUAL    shift and go to state 41
    NOTEQUAL        shift and go to state 42
    EQUALEQUAL      shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45
    INCR            shift and go to state 46
    DECR            shift and go to state 47


state 4

    (4) last -> output .

    SEMICOLON       reduce using rule 4 (last -> output .)


state 5

    (5) last -> list .

    SEMICOLON       reduce using rule 5 (last -> list .)


state 6

    (6) last -> var_assign .

    SEMICOLON       reduce using rule 6 (last -> var_assign .)


state 7

    (7) last -> var_declare .

    SEMICOLON       reduce using rule 7 (last -> var_declare .)


state 8

    (8) last -> if_exp .

    SEMICOLON       reduce using rule 8 (last -> if_exp .)


state 9

    (9) last -> empty .

    SEMICOLON       reduce using rule 9 (last -> empty .)


state 10

    (63) codestmt -> MINUS . codestmt
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    codestmt                       shift and go to state 48
    list_funcs                     shift and go to state 49
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 11

    (70) codestmt -> list_funcs . PLUS codestmt
    (71) codestmt -> list_funcs . MINUS codestmt
    (72) codestmt -> list_funcs . MULTIPLY codestmt
    (73) codestmt -> list_funcs . DIVIDE codestmt
    (74) codestmt -> list_funcs . MOD codestmt
    (75) codestmt -> list_funcs . POWER codestmt
    (13) list -> list_funcs .

    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    MULTIPLY        shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55
    POWER           shift and go to state 56
    SEMICOLON       reduce using rule 13 (list -> list_funcs .)


state 12

    (90) codestmt -> LBRAC . codestmt RBRAC
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    codestmt                       shift and go to state 57
    list_funcs                     shift and go to state 49
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 13

    (91) codestmt -> NOT . codestmt
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    codestmt                       shift and go to state 58
    list_funcs                     shift and go to state 49
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 14

    (94) codestmt -> NAME .
    (59) var_assign -> NAME . EQUAL codestmt
    (14) list_declare -> NAME . FATARROW SLBRAC SRBRAC
    (15) list_assign -> NAME . EQUAL SLBRAC result SRBRAC
    (16) list_access -> NAME . SLBRAC INT SRBRAC
    (21) list_pop -> NAME . DOT POP LBRAC INT RBRAC
    (22) list_push -> NAME . DOT PUSH LBRAC INT RBRAC
    (23) list_push -> NAME . DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> NAME . DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> NAME . DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> NAME . DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> NAME . DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> NAME . DOT INDEX LBRAC INT RBRAC

    PLUS            reduce using rule 94 (codestmt -> NAME .)
    MINUS           reduce using rule 94 (codestmt -> NAME .)
    MULTIPLY        reduce using rule 94 (codestmt -> NAME .)
    DIVIDE          reduce using rule 94 (codestmt -> NAME .)
    MOD             reduce using rule 94 (codestmt -> NAME .)
    POWER           reduce using rule 94 (codestmt -> NAME .)
    LESSTHAN        reduce using rule 94 (codestmt -> NAME .)
    GREATERTHAN     reduce using rule 94 (codestmt -> NAME .)
    LESSEQUAL       reduce using rule 94 (codestmt -> NAME .)
    GREATEREQUAL    reduce using rule 94 (codestmt -> NAME .)
    NOTEQUAL        reduce using rule 94 (codestmt -> NAME .)
    EQUALEQUAL      reduce using rule 94 (codestmt -> NAME .)
    AND             reduce using rule 94 (codestmt -> NAME .)
    OR              reduce using rule 94 (codestmt -> NAME .)
    INCR            reduce using rule 94 (codestmt -> NAME .)
    DECR            reduce using rule 94 (codestmt -> NAME .)
    SEMICOLON       reduce using rule 94 (codestmt -> NAME .)
    EQUAL           shift and go to state 59
    FATARROW        shift and go to state 60
    SLBRAC          shift and go to state 61
    DOT             shift and go to state 62


state 15

    (95) codestmt -> BOOL .

    PLUS            reduce using rule 95 (codestmt -> BOOL .)
    MINUS           reduce using rule 95 (codestmt -> BOOL .)
    MULTIPLY        reduce using rule 95 (codestmt -> BOOL .)
    DIVIDE          reduce using rule 95 (codestmt -> BOOL .)
    MOD             reduce using rule 95 (codestmt -> BOOL .)
    POWER           reduce using rule 95 (codestmt -> BOOL .)
    LESSTHAN        reduce using rule 95 (codestmt -> BOOL .)
    GREATERTHAN     reduce using rule 95 (codestmt -> BOOL .)
    LESSEQUAL       reduce using rule 95 (codestmt -> BOOL .)
    GREATEREQUAL    reduce using rule 95 (codestmt -> BOOL .)
    NOTEQUAL        reduce using rule 95 (codestmt -> BOOL .)
    EQUALEQUAL      reduce using rule 95 (codestmt -> BOOL .)
    AND             reduce using rule 95 (codestmt -> BOOL .)
    OR              reduce using rule 95 (codestmt -> BOOL .)
    INCR            reduce using rule 95 (codestmt -> BOOL .)
    DECR            reduce using rule 95 (codestmt -> BOOL .)
    SEMICOLON       reduce using rule 95 (codestmt -> BOOL .)
    RBRAC           reduce using rule 95 (codestmt -> BOOL .)
    COMMA           reduce using rule 95 (codestmt -> BOOL .)
    SRBRAC          reduce using rule 95 (codestmt -> BOOL .)


state 16

    (96) codestmt -> CHAR .

    PLUS            reduce using rule 96 (codestmt -> CHAR .)
    MINUS           reduce using rule 96 (codestmt -> CHAR .)
    MULTIPLY        reduce using rule 96 (codestmt -> CHAR .)
    DIVIDE          reduce using rule 96 (codestmt -> CHAR .)
    MOD             reduce using rule 96 (codestmt -> CHAR .)
    POWER           reduce using rule 96 (codestmt -> CHAR .)
    LESSTHAN        reduce using rule 96 (codestmt -> CHAR .)
    GREATERTHAN     reduce using rule 96 (codestmt -> CHAR .)
    LESSEQUAL       reduce using rule 96 (codestmt -> CHAR .)
    GREATEREQUAL    reduce using rule 96 (codestmt -> CHAR .)
    NOTEQUAL        reduce using rule 96 (codestmt -> CHAR .)
    EQUALEQUAL      reduce using rule 96 (codestmt -> CHAR .)
    AND             reduce using rule 96 (codestmt -> CHAR .)
    OR              reduce using rule 96 (codestmt -> CHAR .)
    INCR            reduce using rule 96 (codestmt -> CHAR .)
    DECR            reduce using rule 96 (codestmt -> CHAR .)
    SEMICOLON       reduce using rule 96 (codestmt -> CHAR .)
    RBRAC           reduce using rule 96 (codestmt -> CHAR .)
    COMMA           reduce using rule 96 (codestmt -> CHAR .)
    SRBRAC          reduce using rule 96 (codestmt -> CHAR .)


state 17

    (97) codestmt -> STRING .

    PLUS            reduce using rule 97 (codestmt -> STRING .)
    MINUS           reduce using rule 97 (codestmt -> STRING .)
    MULTIPLY        reduce using rule 97 (codestmt -> STRING .)
    DIVIDE          reduce using rule 97 (codestmt -> STRING .)
    MOD             reduce using rule 97 (codestmt -> STRING .)
    POWER           reduce using rule 97 (codestmt -> STRING .)
    LESSTHAN        reduce using rule 97 (codestmt -> STRING .)
    GREATERTHAN     reduce using rule 97 (codestmt -> STRING .)
    LESSEQUAL       reduce using rule 97 (codestmt -> STRING .)
    GREATEREQUAL    reduce using rule 97 (codestmt -> STRING .)
    NOTEQUAL        reduce using rule 97 (codestmt -> STRING .)
    EQUALEQUAL      reduce using rule 97 (codestmt -> STRING .)
    AND             reduce using rule 97 (codestmt -> STRING .)
    OR              reduce using rule 97 (codestmt -> STRING .)
    INCR            reduce using rule 97 (codestmt -> STRING .)
    DECR            reduce using rule 97 (codestmt -> STRING .)
    SEMICOLON       reduce using rule 97 (codestmt -> STRING .)
    RBRAC           reduce using rule 97 (codestmt -> STRING .)
    COMMA           reduce using rule 97 (codestmt -> STRING .)
    SRBRAC          reduce using rule 97 (codestmt -> STRING .)


state 18

    (98) codestmt -> INT .

    PLUS            reduce using rule 98 (codestmt -> INT .)
    MINUS           reduce using rule 98 (codestmt -> INT .)
    MULTIPLY        reduce using rule 98 (codestmt -> INT .)
    DIVIDE          reduce using rule 98 (codestmt -> INT .)
    MOD             reduce using rule 98 (codestmt -> INT .)
    POWER           reduce using rule 98 (codestmt -> INT .)
    LESSTHAN        reduce using rule 98 (codestmt -> INT .)
    GREATERTHAN     reduce using rule 98 (codestmt -> INT .)
    LESSEQUAL       reduce using rule 98 (codestmt -> INT .)
    GREATEREQUAL    reduce using rule 98 (codestmt -> INT .)
    NOTEQUAL        reduce using rule 98 (codestmt -> INT .)
    EQUALEQUAL      reduce using rule 98 (codestmt -> INT .)
    AND             reduce using rule 98 (codestmt -> INT .)
    OR              reduce using rule 98 (codestmt -> INT .)
    INCR            reduce using rule 98 (codestmt -> INT .)
    DECR            reduce using rule 98 (codestmt -> INT .)
    SEMICOLON       reduce using rule 98 (codestmt -> INT .)
    RBRAC           reduce using rule 98 (codestmt -> INT .)
    COMMA           reduce using rule 98 (codestmt -> INT .)
    SRBRAC          reduce using rule 98 (codestmt -> INT .)


state 19

    (99) codestmt -> FLOAT .

    PLUS            reduce using rule 99 (codestmt -> FLOAT .)
    MINUS           reduce using rule 99 (codestmt -> FLOAT .)
    MULTIPLY        reduce using rule 99 (codestmt -> FLOAT .)
    DIVIDE          reduce using rule 99 (codestmt -> FLOAT .)
    MOD             reduce using rule 99 (codestmt -> FLOAT .)
    POWER           reduce using rule 99 (codestmt -> FLOAT .)
    LESSTHAN        reduce using rule 99 (codestmt -> FLOAT .)
    GREATERTHAN     reduce using rule 99 (codestmt -> FLOAT .)
    LESSEQUAL       reduce using rule 99 (codestmt -> FLOAT .)
    GREATEREQUAL    reduce using rule 99 (codestmt -> FLOAT .)
    NOTEQUAL        reduce using rule 99 (codestmt -> FLOAT .)
    EQUALEQUAL      reduce using rule 99 (codestmt -> FLOAT .)
    AND             reduce using rule 99 (codestmt -> FLOAT .)
    OR              reduce using rule 99 (codestmt -> FLOAT .)
    INCR            reduce using rule 99 (codestmt -> FLOAT .)
    DECR            reduce using rule 99 (codestmt -> FLOAT .)
    SEMICOLON       reduce using rule 99 (codestmt -> FLOAT .)
    RBRAC           reduce using rule 99 (codestmt -> FLOAT .)
    COMMA           reduce using rule 99 (codestmt -> FLOAT .)
    SRBRAC          reduce using rule 99 (codestmt -> FLOAT .)


state 20

    (51) output -> PRINT . LBRAC result RBRAC

    LBRAC           shift and go to state 63


state 21

    (10) list -> list_declare .

    SEMICOLON       reduce using rule 10 (list -> list_declare .)


state 22

    (11) list -> list_assign .

    SEMICOLON       reduce using rule 11 (list -> list_assign .)


state 23

    (12) list -> list_access .

    SEMICOLON       reduce using rule 12 (list -> list_access .)


state 24

    (60) var_declare -> TYPE . NAME
    (61) var_declare -> TYPE . NAME EQUAL codestmt

    NAME            shift and go to state 64


state 25

    (33) if_exp -> if_statement .
    (34) if_exp -> if_statement . else_statement
    (35) if_exp -> if_statement . elif_stmt
    (36) if_exp -> if_statement . elif_stmt else_statement
    (38) else_statement -> . ELSE block
    (39) elif_stmt -> . else_if_statement
    (40) elif_stmt -> . else_if_statement elif_stmt
    (41) else_if_statement -> . ELSEIF LBRAC codestmt RBRAC block

    SEMICOLON       reduce using rule 33 (if_exp -> if_statement .)
    ELSE            shift and go to state 67
    ELSEIF          shift and go to state 69

    else_statement                 shift and go to state 65
    elif_stmt                      shift and go to state 66
    else_if_statement              shift and go to state 68

state 26

    (17) list_funcs -> list_pop .

    PLUS            reduce using rule 17 (list_funcs -> list_pop .)
    MINUS           reduce using rule 17 (list_funcs -> list_pop .)
    MULTIPLY        reduce using rule 17 (list_funcs -> list_pop .)
    DIVIDE          reduce using rule 17 (list_funcs -> list_pop .)
    MOD             reduce using rule 17 (list_funcs -> list_pop .)
    POWER           reduce using rule 17 (list_funcs -> list_pop .)
    SEMICOLON       reduce using rule 17 (list_funcs -> list_pop .)
    LESSTHAN        reduce using rule 17 (list_funcs -> list_pop .)
    GREATERTHAN     reduce using rule 17 (list_funcs -> list_pop .)
    LESSEQUAL       reduce using rule 17 (list_funcs -> list_pop .)
    GREATEREQUAL    reduce using rule 17 (list_funcs -> list_pop .)
    NOTEQUAL        reduce using rule 17 (list_funcs -> list_pop .)
    EQUALEQUAL      reduce using rule 17 (list_funcs -> list_pop .)
    AND             reduce using rule 17 (list_funcs -> list_pop .)
    OR              reduce using rule 17 (list_funcs -> list_pop .)
    INCR            reduce using rule 17 (list_funcs -> list_pop .)
    DECR            reduce using rule 17 (list_funcs -> list_pop .)
    RBRAC           reduce using rule 17 (list_funcs -> list_pop .)
    COMMA           reduce using rule 17 (list_funcs -> list_pop .)
    SRBRAC          reduce using rule 17 (list_funcs -> list_pop .)


state 27

    (18) list_funcs -> list_push .

    PLUS            reduce using rule 18 (list_funcs -> list_push .)
    MINUS           reduce using rule 18 (list_funcs -> list_push .)
    MULTIPLY        reduce using rule 18 (list_funcs -> list_push .)
    DIVIDE          reduce using rule 18 (list_funcs -> list_push .)
    MOD             reduce using rule 18 (list_funcs -> list_push .)
    POWER           reduce using rule 18 (list_funcs -> list_push .)
    SEMICOLON       reduce using rule 18 (list_funcs -> list_push .)
    LESSTHAN        reduce using rule 18 (list_funcs -> list_push .)
    GREATERTHAN     reduce using rule 18 (list_funcs -> list_push .)
    LESSEQUAL       reduce using rule 18 (list_funcs -> list_push .)
    GREATEREQUAL    reduce using rule 18 (list_funcs -> list_push .)
    NOTEQUAL        reduce using rule 18 (list_funcs -> list_push .)
    EQUALEQUAL      reduce using rule 18 (list_funcs -> list_push .)
    AND             reduce using rule 18 (list_funcs -> list_push .)
    OR              reduce using rule 18 (list_funcs -> list_push .)
    INCR            reduce using rule 18 (list_funcs -> list_push .)
    DECR            reduce using rule 18 (list_funcs -> list_push .)
    RBRAC           reduce using rule 18 (list_funcs -> list_push .)
    COMMA           reduce using rule 18 (list_funcs -> list_push .)
    SRBRAC          reduce using rule 18 (list_funcs -> list_push .)


state 28

    (19) list_funcs -> list_slice .

    PLUS            reduce using rule 19 (list_funcs -> list_slice .)
    MINUS           reduce using rule 19 (list_funcs -> list_slice .)
    MULTIPLY        reduce using rule 19 (list_funcs -> list_slice .)
    DIVIDE          reduce using rule 19 (list_funcs -> list_slice .)
    MOD             reduce using rule 19 (list_funcs -> list_slice .)
    POWER           reduce using rule 19 (list_funcs -> list_slice .)
    SEMICOLON       reduce using rule 19 (list_funcs -> list_slice .)
    LESSTHAN        reduce using rule 19 (list_funcs -> list_slice .)
    GREATERTHAN     reduce using rule 19 (list_funcs -> list_slice .)
    LESSEQUAL       reduce using rule 19 (list_funcs -> list_slice .)
    GREATEREQUAL    reduce using rule 19 (list_funcs -> list_slice .)
    NOTEQUAL        reduce using rule 19 (list_funcs -> list_slice .)
    EQUALEQUAL      reduce using rule 19 (list_funcs -> list_slice .)
    AND             reduce using rule 19 (list_funcs -> list_slice .)
    OR              reduce using rule 19 (list_funcs -> list_slice .)
    INCR            reduce using rule 19 (list_funcs -> list_slice .)
    DECR            reduce using rule 19 (list_funcs -> list_slice .)
    RBRAC           reduce using rule 19 (list_funcs -> list_slice .)
    COMMA           reduce using rule 19 (list_funcs -> list_slice .)
    SRBRAC          reduce using rule 19 (list_funcs -> list_slice .)


state 29

    (20) list_funcs -> list_index .

    PLUS            reduce using rule 20 (list_funcs -> list_index .)
    MINUS           reduce using rule 20 (list_funcs -> list_index .)
    MULTIPLY        reduce using rule 20 (list_funcs -> list_index .)
    DIVIDE          reduce using rule 20 (list_funcs -> list_index .)
    MOD             reduce using rule 20 (list_funcs -> list_index .)
    POWER           reduce using rule 20 (list_funcs -> list_index .)
    SEMICOLON       reduce using rule 20 (list_funcs -> list_index .)
    LESSTHAN        reduce using rule 20 (list_funcs -> list_index .)
    GREATERTHAN     reduce using rule 20 (list_funcs -> list_index .)
    LESSEQUAL       reduce using rule 20 (list_funcs -> list_index .)
    GREATEREQUAL    reduce using rule 20 (list_funcs -> list_index .)
    NOTEQUAL        reduce using rule 20 (list_funcs -> list_index .)
    EQUALEQUAL      reduce using rule 20 (list_funcs -> list_index .)
    AND             reduce using rule 20 (list_funcs -> list_index .)
    OR              reduce using rule 20 (list_funcs -> list_index .)
    INCR            reduce using rule 20 (list_funcs -> list_index .)
    DECR            reduce using rule 20 (list_funcs -> list_index .)
    RBRAC           reduce using rule 20 (list_funcs -> list_index .)
    COMMA           reduce using rule 20 (list_funcs -> list_index .)
    SRBRAC          reduce using rule 20 (list_funcs -> list_index .)


state 30

    (37) if_statement -> IF . LBRAC codestmt RBRAC block

    LBRAC           shift and go to state 70


state 31

    (1) lines -> last SEMICOLON .
    (2) lines -> last SEMICOLON . lines
    (1) lines -> . last SEMICOLON
    (2) lines -> . last SEMICOLON lines
    (3) last -> . codestmt
    (4) last -> . output
    (5) last -> . list
    (6) last -> . var_assign
    (7) last -> . var_declare
    (8) last -> . if_exp
    (9) last -> . empty
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (51) output -> . PRINT LBRAC result RBRAC
    (10) list -> . list_declare
    (11) list -> . list_assign
    (12) list -> . list_access
    (13) list -> . list_funcs
    (59) var_assign -> . NAME EQUAL codestmt
    (60) var_declare -> . TYPE NAME
    (61) var_declare -> . TYPE NAME EQUAL codestmt
    (33) if_exp -> . if_statement
    (34) if_exp -> . if_statement else_statement
    (35) if_exp -> . if_statement elif_stmt
    (36) if_exp -> . if_statement elif_stmt else_statement
    (62) empty -> .
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (14) list_declare -> . NAME FATARROW SLBRAC SRBRAC
    (15) list_assign -> . NAME EQUAL SLBRAC result SRBRAC
    (16) list_access -> . NAME SLBRAC INT SRBRAC
    (37) if_statement -> . IF LBRAC codestmt RBRAC block
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    $end            reduce using rule 1 (lines -> last SEMICOLON .)
    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 14
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    PRINT           shift and go to state 20
    TYPE            shift and go to state 24
    SEMICOLON       reduce using rule 62 (empty -> .)
    IF              shift and go to state 30

    last                           shift and go to state 2
    lines                          shift and go to state 71
    codestmt                       shift and go to state 3
    output                         shift and go to state 4
    list                           shift and go to state 5
    var_assign                     shift and go to state 6
    var_declare                    shift and go to state 7
    if_exp                         shift and go to state 8
    empty                          shift and go to state 9
    list_funcs                     shift and go to state 11
    list_declare                   shift and go to state 21
    list_assign                    shift and go to state 22
    list_access                    shift and go to state 23
    if_statement                   shift and go to state 25
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 32

    (64) codestmt -> codestmt PLUS . codestmt
    (76) codestmt -> codestmt PLUS . list_funcs
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    codestmt                       shift and go to state 72
    list_funcs                     shift and go to state 73
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 33

    (65) codestmt -> codestmt MINUS . codestmt
    (77) codestmt -> codestmt MINUS . list_funcs
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    codestmt                       shift and go to state 74
    list_funcs                     shift and go to state 75
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 34

    (66) codestmt -> codestmt MULTIPLY . codestmt
    (78) codestmt -> codestmt MULTIPLY . list_funcs
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    codestmt                       shift and go to state 76
    list_funcs                     shift and go to state 77
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 35

    (67) codestmt -> codestmt DIVIDE . codestmt
    (79) codestmt -> codestmt DIVIDE . list_funcs
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    codestmt                       shift and go to state 78
    list_funcs                     shift and go to state 79
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 36

    (68) codestmt -> codestmt MOD . codestmt
    (80) codestmt -> codestmt MOD . list_funcs
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    codestmt                       shift and go to state 80
    list_funcs                     shift and go to state 81
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 37

    (69) codestmt -> codestmt POWER . codestmt
    (81) codestmt -> codestmt POWER . list_funcs
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    codestmt                       shift and go to state 82
    list_funcs                     shift and go to state 83
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 38

    (82) codestmt -> codestmt LESSTHAN . codestmt
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    codestmt                       shift and go to state 84
    list_funcs                     shift and go to state 49
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 39

    (83) codestmt -> codestmt GREATERTHAN . codestmt
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    codestmt                       shift and go to state 85
    list_funcs                     shift and go to state 49
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 40

    (84) codestmt -> codestmt LESSEQUAL . codestmt
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    codestmt                       shift and go to state 86
    list_funcs                     shift and go to state 49
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 41

    (85) codestmt -> codestmt GREATEREQUAL . codestmt
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    codestmt                       shift and go to state 87
    list_funcs                     shift and go to state 49
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 42

    (86) codestmt -> codestmt NOTEQUAL . codestmt
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    codestmt                       shift and go to state 88
    list_funcs                     shift and go to state 49
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 43

    (87) codestmt -> codestmt EQUALEQUAL . codestmt
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    codestmt                       shift and go to state 89
    list_funcs                     shift and go to state 49
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 44

    (88) codestmt -> codestmt AND . codestmt
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    codestmt                       shift and go to state 90
    list_funcs                     shift and go to state 49
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 45

    (89) codestmt -> codestmt OR . codestmt
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    codestmt                       shift and go to state 91
    list_funcs                     shift and go to state 49
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 46

    (92) codestmt -> codestmt INCR .

    PLUS            reduce using rule 92 (codestmt -> codestmt INCR .)
    MINUS           reduce using rule 92 (codestmt -> codestmt INCR .)
    MULTIPLY        reduce using rule 92 (codestmt -> codestmt INCR .)
    DIVIDE          reduce using rule 92 (codestmt -> codestmt INCR .)
    MOD             reduce using rule 92 (codestmt -> codestmt INCR .)
    POWER           reduce using rule 92 (codestmt -> codestmt INCR .)
    LESSTHAN        reduce using rule 92 (codestmt -> codestmt INCR .)
    GREATERTHAN     reduce using rule 92 (codestmt -> codestmt INCR .)
    LESSEQUAL       reduce using rule 92 (codestmt -> codestmt INCR .)
    GREATEREQUAL    reduce using rule 92 (codestmt -> codestmt INCR .)
    NOTEQUAL        reduce using rule 92 (codestmt -> codestmt INCR .)
    EQUALEQUAL      reduce using rule 92 (codestmt -> codestmt INCR .)
    AND             reduce using rule 92 (codestmt -> codestmt INCR .)
    OR              reduce using rule 92 (codestmt -> codestmt INCR .)
    INCR            reduce using rule 92 (codestmt -> codestmt INCR .)
    DECR            reduce using rule 92 (codestmt -> codestmt INCR .)
    SEMICOLON       reduce using rule 92 (codestmt -> codestmt INCR .)
    RBRAC           reduce using rule 92 (codestmt -> codestmt INCR .)
    COMMA           reduce using rule 92 (codestmt -> codestmt INCR .)
    SRBRAC          reduce using rule 92 (codestmt -> codestmt INCR .)


state 47

    (93) codestmt -> codestmt DECR .

    PLUS            reduce using rule 93 (codestmt -> codestmt DECR .)
    MINUS           reduce using rule 93 (codestmt -> codestmt DECR .)
    MULTIPLY        reduce using rule 93 (codestmt -> codestmt DECR .)
    DIVIDE          reduce using rule 93 (codestmt -> codestmt DECR .)
    MOD             reduce using rule 93 (codestmt -> codestmt DECR .)
    POWER           reduce using rule 93 (codestmt -> codestmt DECR .)
    LESSTHAN        reduce using rule 93 (codestmt -> codestmt DECR .)
    GREATERTHAN     reduce using rule 93 (codestmt -> codestmt DECR .)
    LESSEQUAL       reduce using rule 93 (codestmt -> codestmt DECR .)
    GREATEREQUAL    reduce using rule 93 (codestmt -> codestmt DECR .)
    NOTEQUAL        reduce using rule 93 (codestmt -> codestmt DECR .)
    EQUALEQUAL      reduce using rule 93 (codestmt -> codestmt DECR .)
    AND             reduce using rule 93 (codestmt -> codestmt DECR .)
    OR              reduce using rule 93 (codestmt -> codestmt DECR .)
    INCR            reduce using rule 93 (codestmt -> codestmt DECR .)
    DECR            reduce using rule 93 (codestmt -> codestmt DECR .)
    SEMICOLON       reduce using rule 93 (codestmt -> codestmt DECR .)
    RBRAC           reduce using rule 93 (codestmt -> codestmt DECR .)
    COMMA           reduce using rule 93 (codestmt -> codestmt DECR .)
    SRBRAC          reduce using rule 93 (codestmt -> codestmt DECR .)


state 48

    (63) codestmt -> MINUS codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    PLUS            reduce using rule 63 (codestmt -> MINUS codestmt .)
    MINUS           reduce using rule 63 (codestmt -> MINUS codestmt .)
    LESSTHAN        reduce using rule 63 (codestmt -> MINUS codestmt .)
    GREATERTHAN     reduce using rule 63 (codestmt -> MINUS codestmt .)
    LESSEQUAL       reduce using rule 63 (codestmt -> MINUS codestmt .)
    GREATEREQUAL    reduce using rule 63 (codestmt -> MINUS codestmt .)
    NOTEQUAL        reduce using rule 63 (codestmt -> MINUS codestmt .)
    EQUALEQUAL      reduce using rule 63 (codestmt -> MINUS codestmt .)
    AND             reduce using rule 63 (codestmt -> MINUS codestmt .)
    OR              reduce using rule 63 (codestmt -> MINUS codestmt .)
    SEMICOLON       reduce using rule 63 (codestmt -> MINUS codestmt .)
    RBRAC           reduce using rule 63 (codestmt -> MINUS codestmt .)
    COMMA           reduce using rule 63 (codestmt -> MINUS codestmt .)
    SRBRAC          reduce using rule 63 (codestmt -> MINUS codestmt .)
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    MOD             shift and go to state 36
    POWER           shift and go to state 37
    INCR            shift and go to state 46
    DECR            shift and go to state 47

  ! MULTIPLY        [ reduce using rule 63 (codestmt -> MINUS codestmt .) ]
  ! DIVIDE          [ reduce using rule 63 (codestmt -> MINUS codestmt .) ]
  ! MOD             [ reduce using rule 63 (codestmt -> MINUS codestmt .) ]
  ! POWER           [ reduce using rule 63 (codestmt -> MINUS codestmt .) ]
  ! INCR            [ reduce using rule 63 (codestmt -> MINUS codestmt .) ]
  ! DECR            [ reduce using rule 63 (codestmt -> MINUS codestmt .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! GREATERTHAN     [ shift and go to state 39 ]
  ! LESSEQUAL       [ shift and go to state 40 ]
  ! GREATEREQUAL    [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! EQUALEQUAL      [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 49

    (70) codestmt -> list_funcs . PLUS codestmt
    (71) codestmt -> list_funcs . MINUS codestmt
    (72) codestmt -> list_funcs . MULTIPLY codestmt
    (73) codestmt -> list_funcs . DIVIDE codestmt
    (74) codestmt -> list_funcs . MOD codestmt
    (75) codestmt -> list_funcs . POWER codestmt

    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    MULTIPLY        shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55
    POWER           shift and go to state 56


state 50

    (94) codestmt -> NAME .
    (21) list_pop -> NAME . DOT POP LBRAC INT RBRAC
    (22) list_push -> NAME . DOT PUSH LBRAC INT RBRAC
    (23) list_push -> NAME . DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> NAME . DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> NAME . DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> NAME . DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> NAME . DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> NAME . DOT INDEX LBRAC INT RBRAC

    PLUS            reduce using rule 94 (codestmt -> NAME .)
    MINUS           reduce using rule 94 (codestmt -> NAME .)
    MULTIPLY        reduce using rule 94 (codestmt -> NAME .)
    DIVIDE          reduce using rule 94 (codestmt -> NAME .)
    MOD             reduce using rule 94 (codestmt -> NAME .)
    POWER           reduce using rule 94 (codestmt -> NAME .)
    LESSTHAN        reduce using rule 94 (codestmt -> NAME .)
    GREATERTHAN     reduce using rule 94 (codestmt -> NAME .)
    LESSEQUAL       reduce using rule 94 (codestmt -> NAME .)
    GREATEREQUAL    reduce using rule 94 (codestmt -> NAME .)
    NOTEQUAL        reduce using rule 94 (codestmt -> NAME .)
    EQUALEQUAL      reduce using rule 94 (codestmt -> NAME .)
    AND             reduce using rule 94 (codestmt -> NAME .)
    OR              reduce using rule 94 (codestmt -> NAME .)
    INCR            reduce using rule 94 (codestmt -> NAME .)
    DECR            reduce using rule 94 (codestmt -> NAME .)
    SEMICOLON       reduce using rule 94 (codestmt -> NAME .)
    RBRAC           reduce using rule 94 (codestmt -> NAME .)
    COMMA           reduce using rule 94 (codestmt -> NAME .)
    SRBRAC          reduce using rule 94 (codestmt -> NAME .)
    DOT             shift and go to state 62


state 51

    (70) codestmt -> list_funcs PLUS . codestmt
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    list_funcs                     shift and go to state 49
    codestmt                       shift and go to state 92
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 52

    (71) codestmt -> list_funcs MINUS . codestmt
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    list_funcs                     shift and go to state 49
    codestmt                       shift and go to state 93
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 53

    (72) codestmt -> list_funcs MULTIPLY . codestmt
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    list_funcs                     shift and go to state 49
    codestmt                       shift and go to state 94
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 54

    (73) codestmt -> list_funcs DIVIDE . codestmt
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    list_funcs                     shift and go to state 49
    codestmt                       shift and go to state 95
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 55

    (74) codestmt -> list_funcs MOD . codestmt
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    list_funcs                     shift and go to state 49
    codestmt                       shift and go to state 96
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 56

    (75) codestmt -> list_funcs POWER . codestmt
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    list_funcs                     shift and go to state 49
    codestmt                       shift and go to state 97
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 57

    (90) codestmt -> LBRAC codestmt . RBRAC
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    RBRAC           shift and go to state 98
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    MOD             shift and go to state 36
    POWER           shift and go to state 37
    LESSTHAN        shift and go to state 38
    GREATERTHAN     shift and go to state 39
    LESSEQUAL       shift and go to state 40
    GREATEREQUAL    shift and go to state 41
    NOTEQUAL        shift and go to state 42
    EQUALEQUAL      shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45
    INCR            shift and go to state 46
    DECR            shift and go to state 47


state 58

    (91) codestmt -> NOT codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    PLUS            reduce using rule 91 (codestmt -> NOT codestmt .)
    MINUS           reduce using rule 91 (codestmt -> NOT codestmt .)
    MULTIPLY        reduce using rule 91 (codestmt -> NOT codestmt .)
    DIVIDE          reduce using rule 91 (codestmt -> NOT codestmt .)
    MOD             reduce using rule 91 (codestmt -> NOT codestmt .)
    POWER           reduce using rule 91 (codestmt -> NOT codestmt .)
    LESSTHAN        reduce using rule 91 (codestmt -> NOT codestmt .)
    GREATERTHAN     reduce using rule 91 (codestmt -> NOT codestmt .)
    LESSEQUAL       reduce using rule 91 (codestmt -> NOT codestmt .)
    GREATEREQUAL    reduce using rule 91 (codestmt -> NOT codestmt .)
    NOTEQUAL        reduce using rule 91 (codestmt -> NOT codestmt .)
    EQUALEQUAL      reduce using rule 91 (codestmt -> NOT codestmt .)
    AND             reduce using rule 91 (codestmt -> NOT codestmt .)
    OR              reduce using rule 91 (codestmt -> NOT codestmt .)
    SEMICOLON       reduce using rule 91 (codestmt -> NOT codestmt .)
    RBRAC           reduce using rule 91 (codestmt -> NOT codestmt .)
    COMMA           reduce using rule 91 (codestmt -> NOT codestmt .)
    SRBRAC          reduce using rule 91 (codestmt -> NOT codestmt .)
    INCR            shift and go to state 46
    DECR            shift and go to state 47

  ! INCR            [ reduce using rule 91 (codestmt -> NOT codestmt .) ]
  ! DECR            [ reduce using rule 91 (codestmt -> NOT codestmt .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! MULTIPLY        [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 35 ]
  ! MOD             [ shift and go to state 36 ]
  ! POWER           [ shift and go to state 37 ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! GREATERTHAN     [ shift and go to state 39 ]
  ! LESSEQUAL       [ shift and go to state 40 ]
  ! GREATEREQUAL    [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! EQUALEQUAL      [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 59

    (59) var_assign -> NAME EQUAL . codestmt
    (15) list_assign -> NAME EQUAL . SLBRAC result SRBRAC
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    SLBRAC          shift and go to state 100
    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    codestmt                       shift and go to state 99
    list_funcs                     shift and go to state 49
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 60

    (14) list_declare -> NAME FATARROW . SLBRAC SRBRAC

    SLBRAC          shift and go to state 101


state 61

    (16) list_access -> NAME SLBRAC . INT SRBRAC

    INT             shift and go to state 102


state 62

    (21) list_pop -> NAME DOT . POP LBRAC INT RBRAC
    (22) list_push -> NAME DOT . PUSH LBRAC INT RBRAC
    (23) list_push -> NAME DOT . PUSH LBRAC FLOAT RBRAC
    (24) list_push -> NAME DOT . PUSH LBRAC CHAR RBRAC
    (25) list_push -> NAME DOT . PUSH LBRAC STRING RBRAC
    (26) list_push -> NAME DOT . PUSH LBRAC BOOL RBRAC
    (27) list_slice -> NAME DOT . SLICE LBRAC sliceval RBRAC
    (32) list_index -> NAME DOT . INDEX LBRAC INT RBRAC

    POP             shift and go to state 103
    PUSH            shift and go to state 104
    SLICE           shift and go to state 105
    INDEX           shift and go to state 106


state 63

    (51) output -> PRINT LBRAC . result RBRAC
    (52) result -> . printstmt
    (53) result -> . printstmt COMMA result
    (54) result -> . list_access
    (55) result -> . list_access COMMA result
    (56) result -> . list_funcs
    (57) result -> . list_funcs COMMA result
    (58) printstmt -> . codestmt
    (16) list_access -> . NAME SLBRAC INT SRBRAC
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    NAME            shift and go to state 112
    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    result                         shift and go to state 107
    printstmt                      shift and go to state 108
    list_access                    shift and go to state 109
    list_funcs                     shift and go to state 110
    codestmt                       shift and go to state 111
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 64

    (60) var_declare -> TYPE NAME .
    (61) var_declare -> TYPE NAME . EQUAL codestmt

    SEMICOLON       reduce using rule 60 (var_declare -> TYPE NAME .)
    EQUAL           shift and go to state 113


state 65

    (34) if_exp -> if_statement else_statement .

    SEMICOLON       reduce using rule 34 (if_exp -> if_statement else_statement .)


state 66

    (35) if_exp -> if_statement elif_stmt .
    (36) if_exp -> if_statement elif_stmt . else_statement
    (38) else_statement -> . ELSE block

    SEMICOLON       reduce using rule 35 (if_exp -> if_statement elif_stmt .)
    ELSE            shift and go to state 67

    else_statement                 shift and go to state 114

state 67

    (38) else_statement -> ELSE . block
    (42) block -> . CLBRAC codeblock CRBRAC

    CLBRAC          shift and go to state 116

    block                          shift and go to state 115

state 68

    (39) elif_stmt -> else_if_statement .
    (40) elif_stmt -> else_if_statement . elif_stmt
    (39) elif_stmt -> . else_if_statement
    (40) elif_stmt -> . else_if_statement elif_stmt
    (41) else_if_statement -> . ELSEIF LBRAC codestmt RBRAC block

    ELSE            reduce using rule 39 (elif_stmt -> else_if_statement .)
    SEMICOLON       reduce using rule 39 (elif_stmt -> else_if_statement .)
    ELSEIF          shift and go to state 69

    else_if_statement              shift and go to state 68
    elif_stmt                      shift and go to state 117

state 69

    (41) else_if_statement -> ELSEIF . LBRAC codestmt RBRAC block

    LBRAC           shift and go to state 118


state 70

    (37) if_statement -> IF LBRAC . codestmt RBRAC block
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    codestmt                       shift and go to state 119
    list_funcs                     shift and go to state 49
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 71

    (2) lines -> last SEMICOLON lines .

    $end            reduce using rule 2 (lines -> last SEMICOLON lines .)


state 72

    (64) codestmt -> codestmt PLUS codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    PLUS            reduce using rule 64 (codestmt -> codestmt PLUS codestmt .)
    MINUS           reduce using rule 64 (codestmt -> codestmt PLUS codestmt .)
    LESSTHAN        reduce using rule 64 (codestmt -> codestmt PLUS codestmt .)
    GREATERTHAN     reduce using rule 64 (codestmt -> codestmt PLUS codestmt .)
    LESSEQUAL       reduce using rule 64 (codestmt -> codestmt PLUS codestmt .)
    GREATEREQUAL    reduce using rule 64 (codestmt -> codestmt PLUS codestmt .)
    NOTEQUAL        reduce using rule 64 (codestmt -> codestmt PLUS codestmt .)
    EQUALEQUAL      reduce using rule 64 (codestmt -> codestmt PLUS codestmt .)
    AND             reduce using rule 64 (codestmt -> codestmt PLUS codestmt .)
    OR              reduce using rule 64 (codestmt -> codestmt PLUS codestmt .)
    SEMICOLON       reduce using rule 64 (codestmt -> codestmt PLUS codestmt .)
    RBRAC           reduce using rule 64 (codestmt -> codestmt PLUS codestmt .)
    COMMA           reduce using rule 64 (codestmt -> codestmt PLUS codestmt .)
    SRBRAC          reduce using rule 64 (codestmt -> codestmt PLUS codestmt .)
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    MOD             shift and go to state 36
    POWER           shift and go to state 37
    INCR            shift and go to state 46
    DECR            shift and go to state 47

  ! MULTIPLY        [ reduce using rule 64 (codestmt -> codestmt PLUS codestmt .) ]
  ! DIVIDE          [ reduce using rule 64 (codestmt -> codestmt PLUS codestmt .) ]
  ! MOD             [ reduce using rule 64 (codestmt -> codestmt PLUS codestmt .) ]
  ! POWER           [ reduce using rule 64 (codestmt -> codestmt PLUS codestmt .) ]
  ! INCR            [ reduce using rule 64 (codestmt -> codestmt PLUS codestmt .) ]
  ! DECR            [ reduce using rule 64 (codestmt -> codestmt PLUS codestmt .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! GREATERTHAN     [ shift and go to state 39 ]
  ! LESSEQUAL       [ shift and go to state 40 ]
  ! GREATEREQUAL    [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! EQUALEQUAL      [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 73

    (76) codestmt -> codestmt PLUS list_funcs .
    (70) codestmt -> list_funcs . PLUS codestmt
    (71) codestmt -> list_funcs . MINUS codestmt
    (72) codestmt -> list_funcs . MULTIPLY codestmt
    (73) codestmt -> list_funcs . DIVIDE codestmt
    (74) codestmt -> list_funcs . MOD codestmt
    (75) codestmt -> list_funcs . POWER codestmt

    PLUS            reduce using rule 76 (codestmt -> codestmt PLUS list_funcs .)
    MINUS           reduce using rule 76 (codestmt -> codestmt PLUS list_funcs .)
    LESSTHAN        reduce using rule 76 (codestmt -> codestmt PLUS list_funcs .)
    GREATERTHAN     reduce using rule 76 (codestmt -> codestmt PLUS list_funcs .)
    LESSEQUAL       reduce using rule 76 (codestmt -> codestmt PLUS list_funcs .)
    GREATEREQUAL    reduce using rule 76 (codestmt -> codestmt PLUS list_funcs .)
    NOTEQUAL        reduce using rule 76 (codestmt -> codestmt PLUS list_funcs .)
    EQUALEQUAL      reduce using rule 76 (codestmt -> codestmt PLUS list_funcs .)
    AND             reduce using rule 76 (codestmt -> codestmt PLUS list_funcs .)
    OR              reduce using rule 76 (codestmt -> codestmt PLUS list_funcs .)
    INCR            reduce using rule 76 (codestmt -> codestmt PLUS list_funcs .)
    DECR            reduce using rule 76 (codestmt -> codestmt PLUS list_funcs .)
    SEMICOLON       reduce using rule 76 (codestmt -> codestmt PLUS list_funcs .)
    RBRAC           reduce using rule 76 (codestmt -> codestmt PLUS list_funcs .)
    COMMA           reduce using rule 76 (codestmt -> codestmt PLUS list_funcs .)
    SRBRAC          reduce using rule 76 (codestmt -> codestmt PLUS list_funcs .)
    MULTIPLY        shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55
    POWER           shift and go to state 56

  ! MULTIPLY        [ reduce using rule 76 (codestmt -> codestmt PLUS list_funcs .) ]
  ! DIVIDE          [ reduce using rule 76 (codestmt -> codestmt PLUS list_funcs .) ]
  ! MOD             [ reduce using rule 76 (codestmt -> codestmt PLUS list_funcs .) ]
  ! POWER           [ reduce using rule 76 (codestmt -> codestmt PLUS list_funcs .) ]
  ! PLUS            [ shift and go to state 51 ]
  ! MINUS           [ shift and go to state 52 ]


state 74

    (65) codestmt -> codestmt MINUS codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    PLUS            reduce using rule 65 (codestmt -> codestmt MINUS codestmt .)
    MINUS           reduce using rule 65 (codestmt -> codestmt MINUS codestmt .)
    LESSTHAN        reduce using rule 65 (codestmt -> codestmt MINUS codestmt .)
    GREATERTHAN     reduce using rule 65 (codestmt -> codestmt MINUS codestmt .)
    LESSEQUAL       reduce using rule 65 (codestmt -> codestmt MINUS codestmt .)
    GREATEREQUAL    reduce using rule 65 (codestmt -> codestmt MINUS codestmt .)
    NOTEQUAL        reduce using rule 65 (codestmt -> codestmt MINUS codestmt .)
    EQUALEQUAL      reduce using rule 65 (codestmt -> codestmt MINUS codestmt .)
    AND             reduce using rule 65 (codestmt -> codestmt MINUS codestmt .)
    OR              reduce using rule 65 (codestmt -> codestmt MINUS codestmt .)
    SEMICOLON       reduce using rule 65 (codestmt -> codestmt MINUS codestmt .)
    RBRAC           reduce using rule 65 (codestmt -> codestmt MINUS codestmt .)
    COMMA           reduce using rule 65 (codestmt -> codestmt MINUS codestmt .)
    SRBRAC          reduce using rule 65 (codestmt -> codestmt MINUS codestmt .)
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    MOD             shift and go to state 36
    POWER           shift and go to state 37
    INCR            shift and go to state 46
    DECR            shift and go to state 47

  ! MULTIPLY        [ reduce using rule 65 (codestmt -> codestmt MINUS codestmt .) ]
  ! DIVIDE          [ reduce using rule 65 (codestmt -> codestmt MINUS codestmt .) ]
  ! MOD             [ reduce using rule 65 (codestmt -> codestmt MINUS codestmt .) ]
  ! POWER           [ reduce using rule 65 (codestmt -> codestmt MINUS codestmt .) ]
  ! INCR            [ reduce using rule 65 (codestmt -> codestmt MINUS codestmt .) ]
  ! DECR            [ reduce using rule 65 (codestmt -> codestmt MINUS codestmt .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! GREATERTHAN     [ shift and go to state 39 ]
  ! LESSEQUAL       [ shift and go to state 40 ]
  ! GREATEREQUAL    [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! EQUALEQUAL      [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 75

    (77) codestmt -> codestmt MINUS list_funcs .
    (70) codestmt -> list_funcs . PLUS codestmt
    (71) codestmt -> list_funcs . MINUS codestmt
    (72) codestmt -> list_funcs . MULTIPLY codestmt
    (73) codestmt -> list_funcs . DIVIDE codestmt
    (74) codestmt -> list_funcs . MOD codestmt
    (75) codestmt -> list_funcs . POWER codestmt

    PLUS            reduce using rule 77 (codestmt -> codestmt MINUS list_funcs .)
    MINUS           reduce using rule 77 (codestmt -> codestmt MINUS list_funcs .)
    LESSTHAN        reduce using rule 77 (codestmt -> codestmt MINUS list_funcs .)
    GREATERTHAN     reduce using rule 77 (codestmt -> codestmt MINUS list_funcs .)
    LESSEQUAL       reduce using rule 77 (codestmt -> codestmt MINUS list_funcs .)
    GREATEREQUAL    reduce using rule 77 (codestmt -> codestmt MINUS list_funcs .)
    NOTEQUAL        reduce using rule 77 (codestmt -> codestmt MINUS list_funcs .)
    EQUALEQUAL      reduce using rule 77 (codestmt -> codestmt MINUS list_funcs .)
    AND             reduce using rule 77 (codestmt -> codestmt MINUS list_funcs .)
    OR              reduce using rule 77 (codestmt -> codestmt MINUS list_funcs .)
    INCR            reduce using rule 77 (codestmt -> codestmt MINUS list_funcs .)
    DECR            reduce using rule 77 (codestmt -> codestmt MINUS list_funcs .)
    SEMICOLON       reduce using rule 77 (codestmt -> codestmt MINUS list_funcs .)
    RBRAC           reduce using rule 77 (codestmt -> codestmt MINUS list_funcs .)
    COMMA           reduce using rule 77 (codestmt -> codestmt MINUS list_funcs .)
    SRBRAC          reduce using rule 77 (codestmt -> codestmt MINUS list_funcs .)
    MULTIPLY        shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55
    POWER           shift and go to state 56

  ! MULTIPLY        [ reduce using rule 77 (codestmt -> codestmt MINUS list_funcs .) ]
  ! DIVIDE          [ reduce using rule 77 (codestmt -> codestmt MINUS list_funcs .) ]
  ! MOD             [ reduce using rule 77 (codestmt -> codestmt MINUS list_funcs .) ]
  ! POWER           [ reduce using rule 77 (codestmt -> codestmt MINUS list_funcs .) ]
  ! PLUS            [ shift and go to state 51 ]
  ! MINUS           [ shift and go to state 52 ]


state 76

    (66) codestmt -> codestmt MULTIPLY codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    PLUS            reduce using rule 66 (codestmt -> codestmt MULTIPLY codestmt .)
    MINUS           reduce using rule 66 (codestmt -> codestmt MULTIPLY codestmt .)
    MULTIPLY        reduce using rule 66 (codestmt -> codestmt MULTIPLY codestmt .)
    DIVIDE          reduce using rule 66 (codestmt -> codestmt MULTIPLY codestmt .)
    MOD             reduce using rule 66 (codestmt -> codestmt MULTIPLY codestmt .)
    LESSTHAN        reduce using rule 66 (codestmt -> codestmt MULTIPLY codestmt .)
    GREATERTHAN     reduce using rule 66 (codestmt -> codestmt MULTIPLY codestmt .)
    LESSEQUAL       reduce using rule 66 (codestmt -> codestmt MULTIPLY codestmt .)
    GREATEREQUAL    reduce using rule 66 (codestmt -> codestmt MULTIPLY codestmt .)
    NOTEQUAL        reduce using rule 66 (codestmt -> codestmt MULTIPLY codestmt .)
    EQUALEQUAL      reduce using rule 66 (codestmt -> codestmt MULTIPLY codestmt .)
    AND             reduce using rule 66 (codestmt -> codestmt MULTIPLY codestmt .)
    OR              reduce using rule 66 (codestmt -> codestmt MULTIPLY codestmt .)
    SEMICOLON       reduce using rule 66 (codestmt -> codestmt MULTIPLY codestmt .)
    RBRAC           reduce using rule 66 (codestmt -> codestmt MULTIPLY codestmt .)
    COMMA           reduce using rule 66 (codestmt -> codestmt MULTIPLY codestmt .)
    SRBRAC          reduce using rule 66 (codestmt -> codestmt MULTIPLY codestmt .)
    POWER           shift and go to state 37
    INCR            shift and go to state 46
    DECR            shift and go to state 47

  ! POWER           [ reduce using rule 66 (codestmt -> codestmt MULTIPLY codestmt .) ]
  ! INCR            [ reduce using rule 66 (codestmt -> codestmt MULTIPLY codestmt .) ]
  ! DECR            [ reduce using rule 66 (codestmt -> codestmt MULTIPLY codestmt .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! MULTIPLY        [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 35 ]
  ! MOD             [ shift and go to state 36 ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! GREATERTHAN     [ shift and go to state 39 ]
  ! LESSEQUAL       [ shift and go to state 40 ]
  ! GREATEREQUAL    [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! EQUALEQUAL      [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 77

    (78) codestmt -> codestmt MULTIPLY list_funcs .
    (70) codestmt -> list_funcs . PLUS codestmt
    (71) codestmt -> list_funcs . MINUS codestmt
    (72) codestmt -> list_funcs . MULTIPLY codestmt
    (73) codestmt -> list_funcs . DIVIDE codestmt
    (74) codestmt -> list_funcs . MOD codestmt
    (75) codestmt -> list_funcs . POWER codestmt

    PLUS            reduce using rule 78 (codestmt -> codestmt MULTIPLY list_funcs .)
    MINUS           reduce using rule 78 (codestmt -> codestmt MULTIPLY list_funcs .)
    MULTIPLY        reduce using rule 78 (codestmt -> codestmt MULTIPLY list_funcs .)
    DIVIDE          reduce using rule 78 (codestmt -> codestmt MULTIPLY list_funcs .)
    MOD             reduce using rule 78 (codestmt -> codestmt MULTIPLY list_funcs .)
    LESSTHAN        reduce using rule 78 (codestmt -> codestmt MULTIPLY list_funcs .)
    GREATERTHAN     reduce using rule 78 (codestmt -> codestmt MULTIPLY list_funcs .)
    LESSEQUAL       reduce using rule 78 (codestmt -> codestmt MULTIPLY list_funcs .)
    GREATEREQUAL    reduce using rule 78 (codestmt -> codestmt MULTIPLY list_funcs .)
    NOTEQUAL        reduce using rule 78 (codestmt -> codestmt MULTIPLY list_funcs .)
    EQUALEQUAL      reduce using rule 78 (codestmt -> codestmt MULTIPLY list_funcs .)
    AND             reduce using rule 78 (codestmt -> codestmt MULTIPLY list_funcs .)
    OR              reduce using rule 78 (codestmt -> codestmt MULTIPLY list_funcs .)
    INCR            reduce using rule 78 (codestmt -> codestmt MULTIPLY list_funcs .)
    DECR            reduce using rule 78 (codestmt -> codestmt MULTIPLY list_funcs .)
    SEMICOLON       reduce using rule 78 (codestmt -> codestmt MULTIPLY list_funcs .)
    RBRAC           reduce using rule 78 (codestmt -> codestmt MULTIPLY list_funcs .)
    COMMA           reduce using rule 78 (codestmt -> codestmt MULTIPLY list_funcs .)
    SRBRAC          reduce using rule 78 (codestmt -> codestmt MULTIPLY list_funcs .)
    POWER           shift and go to state 56

  ! POWER           [ reduce using rule 78 (codestmt -> codestmt MULTIPLY list_funcs .) ]
  ! PLUS            [ shift and go to state 51 ]
  ! MINUS           [ shift and go to state 52 ]
  ! MULTIPLY        [ shift and go to state 53 ]
  ! DIVIDE          [ shift and go to state 54 ]
  ! MOD             [ shift and go to state 55 ]


state 78

    (67) codestmt -> codestmt DIVIDE codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    PLUS            reduce using rule 67 (codestmt -> codestmt DIVIDE codestmt .)
    MINUS           reduce using rule 67 (codestmt -> codestmt DIVIDE codestmt .)
    MULTIPLY        reduce using rule 67 (codestmt -> codestmt DIVIDE codestmt .)
    DIVIDE          reduce using rule 67 (codestmt -> codestmt DIVIDE codestmt .)
    MOD             reduce using rule 67 (codestmt -> codestmt DIVIDE codestmt .)
    LESSTHAN        reduce using rule 67 (codestmt -> codestmt DIVIDE codestmt .)
    GREATERTHAN     reduce using rule 67 (codestmt -> codestmt DIVIDE codestmt .)
    LESSEQUAL       reduce using rule 67 (codestmt -> codestmt DIVIDE codestmt .)
    GREATEREQUAL    reduce using rule 67 (codestmt -> codestmt DIVIDE codestmt .)
    NOTEQUAL        reduce using rule 67 (codestmt -> codestmt DIVIDE codestmt .)
    EQUALEQUAL      reduce using rule 67 (codestmt -> codestmt DIVIDE codestmt .)
    AND             reduce using rule 67 (codestmt -> codestmt DIVIDE codestmt .)
    OR              reduce using rule 67 (codestmt -> codestmt DIVIDE codestmt .)
    SEMICOLON       reduce using rule 67 (codestmt -> codestmt DIVIDE codestmt .)
    RBRAC           reduce using rule 67 (codestmt -> codestmt DIVIDE codestmt .)
    COMMA           reduce using rule 67 (codestmt -> codestmt DIVIDE codestmt .)
    SRBRAC          reduce using rule 67 (codestmt -> codestmt DIVIDE codestmt .)
    POWER           shift and go to state 37
    INCR            shift and go to state 46
    DECR            shift and go to state 47

  ! POWER           [ reduce using rule 67 (codestmt -> codestmt DIVIDE codestmt .) ]
  ! INCR            [ reduce using rule 67 (codestmt -> codestmt DIVIDE codestmt .) ]
  ! DECR            [ reduce using rule 67 (codestmt -> codestmt DIVIDE codestmt .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! MULTIPLY        [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 35 ]
  ! MOD             [ shift and go to state 36 ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! GREATERTHAN     [ shift and go to state 39 ]
  ! LESSEQUAL       [ shift and go to state 40 ]
  ! GREATEREQUAL    [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! EQUALEQUAL      [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 79

    (79) codestmt -> codestmt DIVIDE list_funcs .
    (70) codestmt -> list_funcs . PLUS codestmt
    (71) codestmt -> list_funcs . MINUS codestmt
    (72) codestmt -> list_funcs . MULTIPLY codestmt
    (73) codestmt -> list_funcs . DIVIDE codestmt
    (74) codestmt -> list_funcs . MOD codestmt
    (75) codestmt -> list_funcs . POWER codestmt

    PLUS            reduce using rule 79 (codestmt -> codestmt DIVIDE list_funcs .)
    MINUS           reduce using rule 79 (codestmt -> codestmt DIVIDE list_funcs .)
    MULTIPLY        reduce using rule 79 (codestmt -> codestmt DIVIDE list_funcs .)
    DIVIDE          reduce using rule 79 (codestmt -> codestmt DIVIDE list_funcs .)
    MOD             reduce using rule 79 (codestmt -> codestmt DIVIDE list_funcs .)
    LESSTHAN        reduce using rule 79 (codestmt -> codestmt DIVIDE list_funcs .)
    GREATERTHAN     reduce using rule 79 (codestmt -> codestmt DIVIDE list_funcs .)
    LESSEQUAL       reduce using rule 79 (codestmt -> codestmt DIVIDE list_funcs .)
    GREATEREQUAL    reduce using rule 79 (codestmt -> codestmt DIVIDE list_funcs .)
    NOTEQUAL        reduce using rule 79 (codestmt -> codestmt DIVIDE list_funcs .)
    EQUALEQUAL      reduce using rule 79 (codestmt -> codestmt DIVIDE list_funcs .)
    AND             reduce using rule 79 (codestmt -> codestmt DIVIDE list_funcs .)
    OR              reduce using rule 79 (codestmt -> codestmt DIVIDE list_funcs .)
    INCR            reduce using rule 79 (codestmt -> codestmt DIVIDE list_funcs .)
    DECR            reduce using rule 79 (codestmt -> codestmt DIVIDE list_funcs .)
    SEMICOLON       reduce using rule 79 (codestmt -> codestmt DIVIDE list_funcs .)
    RBRAC           reduce using rule 79 (codestmt -> codestmt DIVIDE list_funcs .)
    COMMA           reduce using rule 79 (codestmt -> codestmt DIVIDE list_funcs .)
    SRBRAC          reduce using rule 79 (codestmt -> codestmt DIVIDE list_funcs .)
    POWER           shift and go to state 56

  ! POWER           [ reduce using rule 79 (codestmt -> codestmt DIVIDE list_funcs .) ]
  ! PLUS            [ shift and go to state 51 ]
  ! MINUS           [ shift and go to state 52 ]
  ! MULTIPLY        [ shift and go to state 53 ]
  ! DIVIDE          [ shift and go to state 54 ]
  ! MOD             [ shift and go to state 55 ]


state 80

    (68) codestmt -> codestmt MOD codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    PLUS            reduce using rule 68 (codestmt -> codestmt MOD codestmt .)
    MINUS           reduce using rule 68 (codestmt -> codestmt MOD codestmt .)
    MULTIPLY        reduce using rule 68 (codestmt -> codestmt MOD codestmt .)
    DIVIDE          reduce using rule 68 (codestmt -> codestmt MOD codestmt .)
    MOD             reduce using rule 68 (codestmt -> codestmt MOD codestmt .)
    LESSTHAN        reduce using rule 68 (codestmt -> codestmt MOD codestmt .)
    GREATERTHAN     reduce using rule 68 (codestmt -> codestmt MOD codestmt .)
    LESSEQUAL       reduce using rule 68 (codestmt -> codestmt MOD codestmt .)
    GREATEREQUAL    reduce using rule 68 (codestmt -> codestmt MOD codestmt .)
    NOTEQUAL        reduce using rule 68 (codestmt -> codestmt MOD codestmt .)
    EQUALEQUAL      reduce using rule 68 (codestmt -> codestmt MOD codestmt .)
    AND             reduce using rule 68 (codestmt -> codestmt MOD codestmt .)
    OR              reduce using rule 68 (codestmt -> codestmt MOD codestmt .)
    SEMICOLON       reduce using rule 68 (codestmt -> codestmt MOD codestmt .)
    RBRAC           reduce using rule 68 (codestmt -> codestmt MOD codestmt .)
    COMMA           reduce using rule 68 (codestmt -> codestmt MOD codestmt .)
    SRBRAC          reduce using rule 68 (codestmt -> codestmt MOD codestmt .)
    POWER           shift and go to state 37
    INCR            shift and go to state 46
    DECR            shift and go to state 47

  ! POWER           [ reduce using rule 68 (codestmt -> codestmt MOD codestmt .) ]
  ! INCR            [ reduce using rule 68 (codestmt -> codestmt MOD codestmt .) ]
  ! DECR            [ reduce using rule 68 (codestmt -> codestmt MOD codestmt .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! MULTIPLY        [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 35 ]
  ! MOD             [ shift and go to state 36 ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! GREATERTHAN     [ shift and go to state 39 ]
  ! LESSEQUAL       [ shift and go to state 40 ]
  ! GREATEREQUAL    [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! EQUALEQUAL      [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 81

    (80) codestmt -> codestmt MOD list_funcs .
    (70) codestmt -> list_funcs . PLUS codestmt
    (71) codestmt -> list_funcs . MINUS codestmt
    (72) codestmt -> list_funcs . MULTIPLY codestmt
    (73) codestmt -> list_funcs . DIVIDE codestmt
    (74) codestmt -> list_funcs . MOD codestmt
    (75) codestmt -> list_funcs . POWER codestmt

    PLUS            reduce using rule 80 (codestmt -> codestmt MOD list_funcs .)
    MINUS           reduce using rule 80 (codestmt -> codestmt MOD list_funcs .)
    MULTIPLY        reduce using rule 80 (codestmt -> codestmt MOD list_funcs .)
    DIVIDE          reduce using rule 80 (codestmt -> codestmt MOD list_funcs .)
    MOD             reduce using rule 80 (codestmt -> codestmt MOD list_funcs .)
    LESSTHAN        reduce using rule 80 (codestmt -> codestmt MOD list_funcs .)
    GREATERTHAN     reduce using rule 80 (codestmt -> codestmt MOD list_funcs .)
    LESSEQUAL       reduce using rule 80 (codestmt -> codestmt MOD list_funcs .)
    GREATEREQUAL    reduce using rule 80 (codestmt -> codestmt MOD list_funcs .)
    NOTEQUAL        reduce using rule 80 (codestmt -> codestmt MOD list_funcs .)
    EQUALEQUAL      reduce using rule 80 (codestmt -> codestmt MOD list_funcs .)
    AND             reduce using rule 80 (codestmt -> codestmt MOD list_funcs .)
    OR              reduce using rule 80 (codestmt -> codestmt MOD list_funcs .)
    INCR            reduce using rule 80 (codestmt -> codestmt MOD list_funcs .)
    DECR            reduce using rule 80 (codestmt -> codestmt MOD list_funcs .)
    SEMICOLON       reduce using rule 80 (codestmt -> codestmt MOD list_funcs .)
    RBRAC           reduce using rule 80 (codestmt -> codestmt MOD list_funcs .)
    COMMA           reduce using rule 80 (codestmt -> codestmt MOD list_funcs .)
    SRBRAC          reduce using rule 80 (codestmt -> codestmt MOD list_funcs .)
    POWER           shift and go to state 56

  ! POWER           [ reduce using rule 80 (codestmt -> codestmt MOD list_funcs .) ]
  ! PLUS            [ shift and go to state 51 ]
  ! MINUS           [ shift and go to state 52 ]
  ! MULTIPLY        [ shift and go to state 53 ]
  ! DIVIDE          [ shift and go to state 54 ]
  ! MOD             [ shift and go to state 55 ]


state 82

    (69) codestmt -> codestmt POWER codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    PLUS            reduce using rule 69 (codestmt -> codestmt POWER codestmt .)
    MINUS           reduce using rule 69 (codestmt -> codestmt POWER codestmt .)
    MULTIPLY        reduce using rule 69 (codestmt -> codestmt POWER codestmt .)
    DIVIDE          reduce using rule 69 (codestmt -> codestmt POWER codestmt .)
    MOD             reduce using rule 69 (codestmt -> codestmt POWER codestmt .)
    POWER           reduce using rule 69 (codestmt -> codestmt POWER codestmt .)
    LESSTHAN        reduce using rule 69 (codestmt -> codestmt POWER codestmt .)
    GREATERTHAN     reduce using rule 69 (codestmt -> codestmt POWER codestmt .)
    LESSEQUAL       reduce using rule 69 (codestmt -> codestmt POWER codestmt .)
    GREATEREQUAL    reduce using rule 69 (codestmt -> codestmt POWER codestmt .)
    NOTEQUAL        reduce using rule 69 (codestmt -> codestmt POWER codestmt .)
    EQUALEQUAL      reduce using rule 69 (codestmt -> codestmt POWER codestmt .)
    AND             reduce using rule 69 (codestmt -> codestmt POWER codestmt .)
    OR              reduce using rule 69 (codestmt -> codestmt POWER codestmt .)
    SEMICOLON       reduce using rule 69 (codestmt -> codestmt POWER codestmt .)
    RBRAC           reduce using rule 69 (codestmt -> codestmt POWER codestmt .)
    COMMA           reduce using rule 69 (codestmt -> codestmt POWER codestmt .)
    SRBRAC          reduce using rule 69 (codestmt -> codestmt POWER codestmt .)
    INCR            shift and go to state 46
    DECR            shift and go to state 47

  ! INCR            [ reduce using rule 69 (codestmt -> codestmt POWER codestmt .) ]
  ! DECR            [ reduce using rule 69 (codestmt -> codestmt POWER codestmt .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! MULTIPLY        [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 35 ]
  ! MOD             [ shift and go to state 36 ]
  ! POWER           [ shift and go to state 37 ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! GREATERTHAN     [ shift and go to state 39 ]
  ! LESSEQUAL       [ shift and go to state 40 ]
  ! GREATEREQUAL    [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! EQUALEQUAL      [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 83

    (81) codestmt -> codestmt POWER list_funcs .
    (70) codestmt -> list_funcs . PLUS codestmt
    (71) codestmt -> list_funcs . MINUS codestmt
    (72) codestmt -> list_funcs . MULTIPLY codestmt
    (73) codestmt -> list_funcs . DIVIDE codestmt
    (74) codestmt -> list_funcs . MOD codestmt
    (75) codestmt -> list_funcs . POWER codestmt

    PLUS            reduce using rule 81 (codestmt -> codestmt POWER list_funcs .)
    MINUS           reduce using rule 81 (codestmt -> codestmt POWER list_funcs .)
    MULTIPLY        reduce using rule 81 (codestmt -> codestmt POWER list_funcs .)
    DIVIDE          reduce using rule 81 (codestmt -> codestmt POWER list_funcs .)
    MOD             reduce using rule 81 (codestmt -> codestmt POWER list_funcs .)
    POWER           reduce using rule 81 (codestmt -> codestmt POWER list_funcs .)
    LESSTHAN        reduce using rule 81 (codestmt -> codestmt POWER list_funcs .)
    GREATERTHAN     reduce using rule 81 (codestmt -> codestmt POWER list_funcs .)
    LESSEQUAL       reduce using rule 81 (codestmt -> codestmt POWER list_funcs .)
    GREATEREQUAL    reduce using rule 81 (codestmt -> codestmt POWER list_funcs .)
    NOTEQUAL        reduce using rule 81 (codestmt -> codestmt POWER list_funcs .)
    EQUALEQUAL      reduce using rule 81 (codestmt -> codestmt POWER list_funcs .)
    AND             reduce using rule 81 (codestmt -> codestmt POWER list_funcs .)
    OR              reduce using rule 81 (codestmt -> codestmt POWER list_funcs .)
    INCR            reduce using rule 81 (codestmt -> codestmt POWER list_funcs .)
    DECR            reduce using rule 81 (codestmt -> codestmt POWER list_funcs .)
    SEMICOLON       reduce using rule 81 (codestmt -> codestmt POWER list_funcs .)
    RBRAC           reduce using rule 81 (codestmt -> codestmt POWER list_funcs .)
    COMMA           reduce using rule 81 (codestmt -> codestmt POWER list_funcs .)
    SRBRAC          reduce using rule 81 (codestmt -> codestmt POWER list_funcs .)

  ! PLUS            [ shift and go to state 51 ]
  ! MINUS           [ shift and go to state 52 ]
  ! MULTIPLY        [ shift and go to state 53 ]
  ! DIVIDE          [ shift and go to state 54 ]
  ! MOD             [ shift and go to state 55 ]
  ! POWER           [ shift and go to state 56 ]


state 84

    (82) codestmt -> codestmt LESSTHAN codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    LESSTHAN        reduce using rule 82 (codestmt -> codestmt LESSTHAN codestmt .)
    GREATERTHAN     reduce using rule 82 (codestmt -> codestmt LESSTHAN codestmt .)
    LESSEQUAL       reduce using rule 82 (codestmt -> codestmt LESSTHAN codestmt .)
    GREATEREQUAL    reduce using rule 82 (codestmt -> codestmt LESSTHAN codestmt .)
    NOTEQUAL        reduce using rule 82 (codestmt -> codestmt LESSTHAN codestmt .)
    EQUALEQUAL      reduce using rule 82 (codestmt -> codestmt LESSTHAN codestmt .)
    AND             reduce using rule 82 (codestmt -> codestmt LESSTHAN codestmt .)
    OR              reduce using rule 82 (codestmt -> codestmt LESSTHAN codestmt .)
    SEMICOLON       reduce using rule 82 (codestmt -> codestmt LESSTHAN codestmt .)
    RBRAC           reduce using rule 82 (codestmt -> codestmt LESSTHAN codestmt .)
    COMMA           reduce using rule 82 (codestmt -> codestmt LESSTHAN codestmt .)
    SRBRAC          reduce using rule 82 (codestmt -> codestmt LESSTHAN codestmt .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    MOD             shift and go to state 36
    POWER           shift and go to state 37
    INCR            shift and go to state 46
    DECR            shift and go to state 47

  ! PLUS            [ reduce using rule 82 (codestmt -> codestmt LESSTHAN codestmt .) ]
  ! MINUS           [ reduce using rule 82 (codestmt -> codestmt LESSTHAN codestmt .) ]
  ! MULTIPLY        [ reduce using rule 82 (codestmt -> codestmt LESSTHAN codestmt .) ]
  ! DIVIDE          [ reduce using rule 82 (codestmt -> codestmt LESSTHAN codestmt .) ]
  ! MOD             [ reduce using rule 82 (codestmt -> codestmt LESSTHAN codestmt .) ]
  ! POWER           [ reduce using rule 82 (codestmt -> codestmt LESSTHAN codestmt .) ]
  ! INCR            [ reduce using rule 82 (codestmt -> codestmt LESSTHAN codestmt .) ]
  ! DECR            [ reduce using rule 82 (codestmt -> codestmt LESSTHAN codestmt .) ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! GREATERTHAN     [ shift and go to state 39 ]
  ! LESSEQUAL       [ shift and go to state 40 ]
  ! GREATEREQUAL    [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! EQUALEQUAL      [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 85

    (83) codestmt -> codestmt GREATERTHAN codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    LESSTHAN        reduce using rule 83 (codestmt -> codestmt GREATERTHAN codestmt .)
    GREATERTHAN     reduce using rule 83 (codestmt -> codestmt GREATERTHAN codestmt .)
    LESSEQUAL       reduce using rule 83 (codestmt -> codestmt GREATERTHAN codestmt .)
    GREATEREQUAL    reduce using rule 83 (codestmt -> codestmt GREATERTHAN codestmt .)
    NOTEQUAL        reduce using rule 83 (codestmt -> codestmt GREATERTHAN codestmt .)
    EQUALEQUAL      reduce using rule 83 (codestmt -> codestmt GREATERTHAN codestmt .)
    AND             reduce using rule 83 (codestmt -> codestmt GREATERTHAN codestmt .)
    OR              reduce using rule 83 (codestmt -> codestmt GREATERTHAN codestmt .)
    SEMICOLON       reduce using rule 83 (codestmt -> codestmt GREATERTHAN codestmt .)
    RBRAC           reduce using rule 83 (codestmt -> codestmt GREATERTHAN codestmt .)
    COMMA           reduce using rule 83 (codestmt -> codestmt GREATERTHAN codestmt .)
    SRBRAC          reduce using rule 83 (codestmt -> codestmt GREATERTHAN codestmt .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    MOD             shift and go to state 36
    POWER           shift and go to state 37
    INCR            shift and go to state 46
    DECR            shift and go to state 47

  ! PLUS            [ reduce using rule 83 (codestmt -> codestmt GREATERTHAN codestmt .) ]
  ! MINUS           [ reduce using rule 83 (codestmt -> codestmt GREATERTHAN codestmt .) ]
  ! MULTIPLY        [ reduce using rule 83 (codestmt -> codestmt GREATERTHAN codestmt .) ]
  ! DIVIDE          [ reduce using rule 83 (codestmt -> codestmt GREATERTHAN codestmt .) ]
  ! MOD             [ reduce using rule 83 (codestmt -> codestmt GREATERTHAN codestmt .) ]
  ! POWER           [ reduce using rule 83 (codestmt -> codestmt GREATERTHAN codestmt .) ]
  ! INCR            [ reduce using rule 83 (codestmt -> codestmt GREATERTHAN codestmt .) ]
  ! DECR            [ reduce using rule 83 (codestmt -> codestmt GREATERTHAN codestmt .) ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! GREATERTHAN     [ shift and go to state 39 ]
  ! LESSEQUAL       [ shift and go to state 40 ]
  ! GREATEREQUAL    [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! EQUALEQUAL      [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 86

    (84) codestmt -> codestmt LESSEQUAL codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    LESSTHAN        reduce using rule 84 (codestmt -> codestmt LESSEQUAL codestmt .)
    GREATERTHAN     reduce using rule 84 (codestmt -> codestmt LESSEQUAL codestmt .)
    LESSEQUAL       reduce using rule 84 (codestmt -> codestmt LESSEQUAL codestmt .)
    GREATEREQUAL    reduce using rule 84 (codestmt -> codestmt LESSEQUAL codestmt .)
    NOTEQUAL        reduce using rule 84 (codestmt -> codestmt LESSEQUAL codestmt .)
    EQUALEQUAL      reduce using rule 84 (codestmt -> codestmt LESSEQUAL codestmt .)
    AND             reduce using rule 84 (codestmt -> codestmt LESSEQUAL codestmt .)
    OR              reduce using rule 84 (codestmt -> codestmt LESSEQUAL codestmt .)
    SEMICOLON       reduce using rule 84 (codestmt -> codestmt LESSEQUAL codestmt .)
    RBRAC           reduce using rule 84 (codestmt -> codestmt LESSEQUAL codestmt .)
    COMMA           reduce using rule 84 (codestmt -> codestmt LESSEQUAL codestmt .)
    SRBRAC          reduce using rule 84 (codestmt -> codestmt LESSEQUAL codestmt .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    MOD             shift and go to state 36
    POWER           shift and go to state 37
    INCR            shift and go to state 46
    DECR            shift and go to state 47

  ! PLUS            [ reduce using rule 84 (codestmt -> codestmt LESSEQUAL codestmt .) ]
  ! MINUS           [ reduce using rule 84 (codestmt -> codestmt LESSEQUAL codestmt .) ]
  ! MULTIPLY        [ reduce using rule 84 (codestmt -> codestmt LESSEQUAL codestmt .) ]
  ! DIVIDE          [ reduce using rule 84 (codestmt -> codestmt LESSEQUAL codestmt .) ]
  ! MOD             [ reduce using rule 84 (codestmt -> codestmt LESSEQUAL codestmt .) ]
  ! POWER           [ reduce using rule 84 (codestmt -> codestmt LESSEQUAL codestmt .) ]
  ! INCR            [ reduce using rule 84 (codestmt -> codestmt LESSEQUAL codestmt .) ]
  ! DECR            [ reduce using rule 84 (codestmt -> codestmt LESSEQUAL codestmt .) ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! GREATERTHAN     [ shift and go to state 39 ]
  ! LESSEQUAL       [ shift and go to state 40 ]
  ! GREATEREQUAL    [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! EQUALEQUAL      [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 87

    (85) codestmt -> codestmt GREATEREQUAL codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    LESSTHAN        reduce using rule 85 (codestmt -> codestmt GREATEREQUAL codestmt .)
    GREATERTHAN     reduce using rule 85 (codestmt -> codestmt GREATEREQUAL codestmt .)
    LESSEQUAL       reduce using rule 85 (codestmt -> codestmt GREATEREQUAL codestmt .)
    GREATEREQUAL    reduce using rule 85 (codestmt -> codestmt GREATEREQUAL codestmt .)
    NOTEQUAL        reduce using rule 85 (codestmt -> codestmt GREATEREQUAL codestmt .)
    EQUALEQUAL      reduce using rule 85 (codestmt -> codestmt GREATEREQUAL codestmt .)
    AND             reduce using rule 85 (codestmt -> codestmt GREATEREQUAL codestmt .)
    OR              reduce using rule 85 (codestmt -> codestmt GREATEREQUAL codestmt .)
    SEMICOLON       reduce using rule 85 (codestmt -> codestmt GREATEREQUAL codestmt .)
    RBRAC           reduce using rule 85 (codestmt -> codestmt GREATEREQUAL codestmt .)
    COMMA           reduce using rule 85 (codestmt -> codestmt GREATEREQUAL codestmt .)
    SRBRAC          reduce using rule 85 (codestmt -> codestmt GREATEREQUAL codestmt .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    MOD             shift and go to state 36
    POWER           shift and go to state 37
    INCR            shift and go to state 46
    DECR            shift and go to state 47

  ! PLUS            [ reduce using rule 85 (codestmt -> codestmt GREATEREQUAL codestmt .) ]
  ! MINUS           [ reduce using rule 85 (codestmt -> codestmt GREATEREQUAL codestmt .) ]
  ! MULTIPLY        [ reduce using rule 85 (codestmt -> codestmt GREATEREQUAL codestmt .) ]
  ! DIVIDE          [ reduce using rule 85 (codestmt -> codestmt GREATEREQUAL codestmt .) ]
  ! MOD             [ reduce using rule 85 (codestmt -> codestmt GREATEREQUAL codestmt .) ]
  ! POWER           [ reduce using rule 85 (codestmt -> codestmt GREATEREQUAL codestmt .) ]
  ! INCR            [ reduce using rule 85 (codestmt -> codestmt GREATEREQUAL codestmt .) ]
  ! DECR            [ reduce using rule 85 (codestmt -> codestmt GREATEREQUAL codestmt .) ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! GREATERTHAN     [ shift and go to state 39 ]
  ! LESSEQUAL       [ shift and go to state 40 ]
  ! GREATEREQUAL    [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! EQUALEQUAL      [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 88

    (86) codestmt -> codestmt NOTEQUAL codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    NOTEQUAL        reduce using rule 86 (codestmt -> codestmt NOTEQUAL codestmt .)
    EQUALEQUAL      reduce using rule 86 (codestmt -> codestmt NOTEQUAL codestmt .)
    AND             reduce using rule 86 (codestmt -> codestmt NOTEQUAL codestmt .)
    OR              reduce using rule 86 (codestmt -> codestmt NOTEQUAL codestmt .)
    SEMICOLON       reduce using rule 86 (codestmt -> codestmt NOTEQUAL codestmt .)
    RBRAC           reduce using rule 86 (codestmt -> codestmt NOTEQUAL codestmt .)
    COMMA           reduce using rule 86 (codestmt -> codestmt NOTEQUAL codestmt .)
    SRBRAC          reduce using rule 86 (codestmt -> codestmt NOTEQUAL codestmt .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    MOD             shift and go to state 36
    POWER           shift and go to state 37
    LESSTHAN        shift and go to state 38
    GREATERTHAN     shift and go to state 39
    LESSEQUAL       shift and go to state 40
    GREATEREQUAL    shift and go to state 41
    INCR            shift and go to state 46
    DECR            shift and go to state 47

  ! PLUS            [ reduce using rule 86 (codestmt -> codestmt NOTEQUAL codestmt .) ]
  ! MINUS           [ reduce using rule 86 (codestmt -> codestmt NOTEQUAL codestmt .) ]
  ! MULTIPLY        [ reduce using rule 86 (codestmt -> codestmt NOTEQUAL codestmt .) ]
  ! DIVIDE          [ reduce using rule 86 (codestmt -> codestmt NOTEQUAL codestmt .) ]
  ! MOD             [ reduce using rule 86 (codestmt -> codestmt NOTEQUAL codestmt .) ]
  ! POWER           [ reduce using rule 86 (codestmt -> codestmt NOTEQUAL codestmt .) ]
  ! LESSTHAN        [ reduce using rule 86 (codestmt -> codestmt NOTEQUAL codestmt .) ]
  ! GREATERTHAN     [ reduce using rule 86 (codestmt -> codestmt NOTEQUAL codestmt .) ]
  ! LESSEQUAL       [ reduce using rule 86 (codestmt -> codestmt NOTEQUAL codestmt .) ]
  ! GREATEREQUAL    [ reduce using rule 86 (codestmt -> codestmt NOTEQUAL codestmt .) ]
  ! INCR            [ reduce using rule 86 (codestmt -> codestmt NOTEQUAL codestmt .) ]
  ! DECR            [ reduce using rule 86 (codestmt -> codestmt NOTEQUAL codestmt .) ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! EQUALEQUAL      [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 89

    (87) codestmt -> codestmt EQUALEQUAL codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    NOTEQUAL        reduce using rule 87 (codestmt -> codestmt EQUALEQUAL codestmt .)
    EQUALEQUAL      reduce using rule 87 (codestmt -> codestmt EQUALEQUAL codestmt .)
    AND             reduce using rule 87 (codestmt -> codestmt EQUALEQUAL codestmt .)
    OR              reduce using rule 87 (codestmt -> codestmt EQUALEQUAL codestmt .)
    SEMICOLON       reduce using rule 87 (codestmt -> codestmt EQUALEQUAL codestmt .)
    RBRAC           reduce using rule 87 (codestmt -> codestmt EQUALEQUAL codestmt .)
    COMMA           reduce using rule 87 (codestmt -> codestmt EQUALEQUAL codestmt .)
    SRBRAC          reduce using rule 87 (codestmt -> codestmt EQUALEQUAL codestmt .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    MOD             shift and go to state 36
    POWER           shift and go to state 37
    LESSTHAN        shift and go to state 38
    GREATERTHAN     shift and go to state 39
    LESSEQUAL       shift and go to state 40
    GREATEREQUAL    shift and go to state 41
    INCR            shift and go to state 46
    DECR            shift and go to state 47

  ! PLUS            [ reduce using rule 87 (codestmt -> codestmt EQUALEQUAL codestmt .) ]
  ! MINUS           [ reduce using rule 87 (codestmt -> codestmt EQUALEQUAL codestmt .) ]
  ! MULTIPLY        [ reduce using rule 87 (codestmt -> codestmt EQUALEQUAL codestmt .) ]
  ! DIVIDE          [ reduce using rule 87 (codestmt -> codestmt EQUALEQUAL codestmt .) ]
  ! MOD             [ reduce using rule 87 (codestmt -> codestmt EQUALEQUAL codestmt .) ]
  ! POWER           [ reduce using rule 87 (codestmt -> codestmt EQUALEQUAL codestmt .) ]
  ! LESSTHAN        [ reduce using rule 87 (codestmt -> codestmt EQUALEQUAL codestmt .) ]
  ! GREATERTHAN     [ reduce using rule 87 (codestmt -> codestmt EQUALEQUAL codestmt .) ]
  ! LESSEQUAL       [ reduce using rule 87 (codestmt -> codestmt EQUALEQUAL codestmt .) ]
  ! GREATEREQUAL    [ reduce using rule 87 (codestmt -> codestmt EQUALEQUAL codestmt .) ]
  ! INCR            [ reduce using rule 87 (codestmt -> codestmt EQUALEQUAL codestmt .) ]
  ! DECR            [ reduce using rule 87 (codestmt -> codestmt EQUALEQUAL codestmt .) ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! EQUALEQUAL      [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 90

    (88) codestmt -> codestmt AND codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    AND             reduce using rule 88 (codestmt -> codestmt AND codestmt .)
    OR              reduce using rule 88 (codestmt -> codestmt AND codestmt .)
    SEMICOLON       reduce using rule 88 (codestmt -> codestmt AND codestmt .)
    RBRAC           reduce using rule 88 (codestmt -> codestmt AND codestmt .)
    COMMA           reduce using rule 88 (codestmt -> codestmt AND codestmt .)
    SRBRAC          reduce using rule 88 (codestmt -> codestmt AND codestmt .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    MOD             shift and go to state 36
    POWER           shift and go to state 37
    LESSTHAN        shift and go to state 38
    GREATERTHAN     shift and go to state 39
    LESSEQUAL       shift and go to state 40
    GREATEREQUAL    shift and go to state 41
    NOTEQUAL        shift and go to state 42
    EQUALEQUAL      shift and go to state 43
    INCR            shift and go to state 46
    DECR            shift and go to state 47

  ! PLUS            [ reduce using rule 88 (codestmt -> codestmt AND codestmt .) ]
  ! MINUS           [ reduce using rule 88 (codestmt -> codestmt AND codestmt .) ]
  ! MULTIPLY        [ reduce using rule 88 (codestmt -> codestmt AND codestmt .) ]
  ! DIVIDE          [ reduce using rule 88 (codestmt -> codestmt AND codestmt .) ]
  ! MOD             [ reduce using rule 88 (codestmt -> codestmt AND codestmt .) ]
  ! POWER           [ reduce using rule 88 (codestmt -> codestmt AND codestmt .) ]
  ! LESSTHAN        [ reduce using rule 88 (codestmt -> codestmt AND codestmt .) ]
  ! GREATERTHAN     [ reduce using rule 88 (codestmt -> codestmt AND codestmt .) ]
  ! LESSEQUAL       [ reduce using rule 88 (codestmt -> codestmt AND codestmt .) ]
  ! GREATEREQUAL    [ reduce using rule 88 (codestmt -> codestmt AND codestmt .) ]
  ! NOTEQUAL        [ reduce using rule 88 (codestmt -> codestmt AND codestmt .) ]
  ! EQUALEQUAL      [ reduce using rule 88 (codestmt -> codestmt AND codestmt .) ]
  ! INCR            [ reduce using rule 88 (codestmt -> codestmt AND codestmt .) ]
  ! DECR            [ reduce using rule 88 (codestmt -> codestmt AND codestmt .) ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 91

    (89) codestmt -> codestmt OR codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    OR              reduce using rule 89 (codestmt -> codestmt OR codestmt .)
    SEMICOLON       reduce using rule 89 (codestmt -> codestmt OR codestmt .)
    RBRAC           reduce using rule 89 (codestmt -> codestmt OR codestmt .)
    COMMA           reduce using rule 89 (codestmt -> codestmt OR codestmt .)
    SRBRAC          reduce using rule 89 (codestmt -> codestmt OR codestmt .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    MOD             shift and go to state 36
    POWER           shift and go to state 37
    LESSTHAN        shift and go to state 38
    GREATERTHAN     shift and go to state 39
    LESSEQUAL       shift and go to state 40
    GREATEREQUAL    shift and go to state 41
    NOTEQUAL        shift and go to state 42
    EQUALEQUAL      shift and go to state 43
    AND             shift and go to state 44
    INCR            shift and go to state 46
    DECR            shift and go to state 47

  ! PLUS            [ reduce using rule 89 (codestmt -> codestmt OR codestmt .) ]
  ! MINUS           [ reduce using rule 89 (codestmt -> codestmt OR codestmt .) ]
  ! MULTIPLY        [ reduce using rule 89 (codestmt -> codestmt OR codestmt .) ]
  ! DIVIDE          [ reduce using rule 89 (codestmt -> codestmt OR codestmt .) ]
  ! MOD             [ reduce using rule 89 (codestmt -> codestmt OR codestmt .) ]
  ! POWER           [ reduce using rule 89 (codestmt -> codestmt OR codestmt .) ]
  ! LESSTHAN        [ reduce using rule 89 (codestmt -> codestmt OR codestmt .) ]
  ! GREATERTHAN     [ reduce using rule 89 (codestmt -> codestmt OR codestmt .) ]
  ! LESSEQUAL       [ reduce using rule 89 (codestmt -> codestmt OR codestmt .) ]
  ! GREATEREQUAL    [ reduce using rule 89 (codestmt -> codestmt OR codestmt .) ]
  ! NOTEQUAL        [ reduce using rule 89 (codestmt -> codestmt OR codestmt .) ]
  ! EQUALEQUAL      [ reduce using rule 89 (codestmt -> codestmt OR codestmt .) ]
  ! AND             [ reduce using rule 89 (codestmt -> codestmt OR codestmt .) ]
  ! INCR            [ reduce using rule 89 (codestmt -> codestmt OR codestmt .) ]
  ! DECR            [ reduce using rule 89 (codestmt -> codestmt OR codestmt .) ]
  ! OR              [ shift and go to state 45 ]


state 92

    (70) codestmt -> list_funcs PLUS codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    PLUS            reduce using rule 70 (codestmt -> list_funcs PLUS codestmt .)
    MINUS           reduce using rule 70 (codestmt -> list_funcs PLUS codestmt .)
    LESSTHAN        reduce using rule 70 (codestmt -> list_funcs PLUS codestmt .)
    GREATERTHAN     reduce using rule 70 (codestmt -> list_funcs PLUS codestmt .)
    LESSEQUAL       reduce using rule 70 (codestmt -> list_funcs PLUS codestmt .)
    GREATEREQUAL    reduce using rule 70 (codestmt -> list_funcs PLUS codestmt .)
    NOTEQUAL        reduce using rule 70 (codestmt -> list_funcs PLUS codestmt .)
    EQUALEQUAL      reduce using rule 70 (codestmt -> list_funcs PLUS codestmt .)
    AND             reduce using rule 70 (codestmt -> list_funcs PLUS codestmt .)
    OR              reduce using rule 70 (codestmt -> list_funcs PLUS codestmt .)
    SEMICOLON       reduce using rule 70 (codestmt -> list_funcs PLUS codestmt .)
    RBRAC           reduce using rule 70 (codestmt -> list_funcs PLUS codestmt .)
    COMMA           reduce using rule 70 (codestmt -> list_funcs PLUS codestmt .)
    SRBRAC          reduce using rule 70 (codestmt -> list_funcs PLUS codestmt .)
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    MOD             shift and go to state 36
    POWER           shift and go to state 37
    INCR            shift and go to state 46
    DECR            shift and go to state 47

  ! MULTIPLY        [ reduce using rule 70 (codestmt -> list_funcs PLUS codestmt .) ]
  ! DIVIDE          [ reduce using rule 70 (codestmt -> list_funcs PLUS codestmt .) ]
  ! MOD             [ reduce using rule 70 (codestmt -> list_funcs PLUS codestmt .) ]
  ! POWER           [ reduce using rule 70 (codestmt -> list_funcs PLUS codestmt .) ]
  ! INCR            [ reduce using rule 70 (codestmt -> list_funcs PLUS codestmt .) ]
  ! DECR            [ reduce using rule 70 (codestmt -> list_funcs PLUS codestmt .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! GREATERTHAN     [ shift and go to state 39 ]
  ! LESSEQUAL       [ shift and go to state 40 ]
  ! GREATEREQUAL    [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! EQUALEQUAL      [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 93

    (71) codestmt -> list_funcs MINUS codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    PLUS            reduce using rule 71 (codestmt -> list_funcs MINUS codestmt .)
    MINUS           reduce using rule 71 (codestmt -> list_funcs MINUS codestmt .)
    LESSTHAN        reduce using rule 71 (codestmt -> list_funcs MINUS codestmt .)
    GREATERTHAN     reduce using rule 71 (codestmt -> list_funcs MINUS codestmt .)
    LESSEQUAL       reduce using rule 71 (codestmt -> list_funcs MINUS codestmt .)
    GREATEREQUAL    reduce using rule 71 (codestmt -> list_funcs MINUS codestmt .)
    NOTEQUAL        reduce using rule 71 (codestmt -> list_funcs MINUS codestmt .)
    EQUALEQUAL      reduce using rule 71 (codestmt -> list_funcs MINUS codestmt .)
    AND             reduce using rule 71 (codestmt -> list_funcs MINUS codestmt .)
    OR              reduce using rule 71 (codestmt -> list_funcs MINUS codestmt .)
    SEMICOLON       reduce using rule 71 (codestmt -> list_funcs MINUS codestmt .)
    RBRAC           reduce using rule 71 (codestmt -> list_funcs MINUS codestmt .)
    COMMA           reduce using rule 71 (codestmt -> list_funcs MINUS codestmt .)
    SRBRAC          reduce using rule 71 (codestmt -> list_funcs MINUS codestmt .)
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    MOD             shift and go to state 36
    POWER           shift and go to state 37
    INCR            shift and go to state 46
    DECR            shift and go to state 47

  ! MULTIPLY        [ reduce using rule 71 (codestmt -> list_funcs MINUS codestmt .) ]
  ! DIVIDE          [ reduce using rule 71 (codestmt -> list_funcs MINUS codestmt .) ]
  ! MOD             [ reduce using rule 71 (codestmt -> list_funcs MINUS codestmt .) ]
  ! POWER           [ reduce using rule 71 (codestmt -> list_funcs MINUS codestmt .) ]
  ! INCR            [ reduce using rule 71 (codestmt -> list_funcs MINUS codestmt .) ]
  ! DECR            [ reduce using rule 71 (codestmt -> list_funcs MINUS codestmt .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! GREATERTHAN     [ shift and go to state 39 ]
  ! LESSEQUAL       [ shift and go to state 40 ]
  ! GREATEREQUAL    [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! EQUALEQUAL      [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 94

    (72) codestmt -> list_funcs MULTIPLY codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    PLUS            reduce using rule 72 (codestmt -> list_funcs MULTIPLY codestmt .)
    MINUS           reduce using rule 72 (codestmt -> list_funcs MULTIPLY codestmt .)
    MULTIPLY        reduce using rule 72 (codestmt -> list_funcs MULTIPLY codestmt .)
    DIVIDE          reduce using rule 72 (codestmt -> list_funcs MULTIPLY codestmt .)
    MOD             reduce using rule 72 (codestmt -> list_funcs MULTIPLY codestmt .)
    LESSTHAN        reduce using rule 72 (codestmt -> list_funcs MULTIPLY codestmt .)
    GREATERTHAN     reduce using rule 72 (codestmt -> list_funcs MULTIPLY codestmt .)
    LESSEQUAL       reduce using rule 72 (codestmt -> list_funcs MULTIPLY codestmt .)
    GREATEREQUAL    reduce using rule 72 (codestmt -> list_funcs MULTIPLY codestmt .)
    NOTEQUAL        reduce using rule 72 (codestmt -> list_funcs MULTIPLY codestmt .)
    EQUALEQUAL      reduce using rule 72 (codestmt -> list_funcs MULTIPLY codestmt .)
    AND             reduce using rule 72 (codestmt -> list_funcs MULTIPLY codestmt .)
    OR              reduce using rule 72 (codestmt -> list_funcs MULTIPLY codestmt .)
    SEMICOLON       reduce using rule 72 (codestmt -> list_funcs MULTIPLY codestmt .)
    RBRAC           reduce using rule 72 (codestmt -> list_funcs MULTIPLY codestmt .)
    COMMA           reduce using rule 72 (codestmt -> list_funcs MULTIPLY codestmt .)
    SRBRAC          reduce using rule 72 (codestmt -> list_funcs MULTIPLY codestmt .)
    POWER           shift and go to state 37
    INCR            shift and go to state 46
    DECR            shift and go to state 47

  ! POWER           [ reduce using rule 72 (codestmt -> list_funcs MULTIPLY codestmt .) ]
  ! INCR            [ reduce using rule 72 (codestmt -> list_funcs MULTIPLY codestmt .) ]
  ! DECR            [ reduce using rule 72 (codestmt -> list_funcs MULTIPLY codestmt .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! MULTIPLY        [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 35 ]
  ! MOD             [ shift and go to state 36 ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! GREATERTHAN     [ shift and go to state 39 ]
  ! LESSEQUAL       [ shift and go to state 40 ]
  ! GREATEREQUAL    [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! EQUALEQUAL      [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 95

    (73) codestmt -> list_funcs DIVIDE codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    PLUS            reduce using rule 73 (codestmt -> list_funcs DIVIDE codestmt .)
    MINUS           reduce using rule 73 (codestmt -> list_funcs DIVIDE codestmt .)
    MULTIPLY        reduce using rule 73 (codestmt -> list_funcs DIVIDE codestmt .)
    DIVIDE          reduce using rule 73 (codestmt -> list_funcs DIVIDE codestmt .)
    MOD             reduce using rule 73 (codestmt -> list_funcs DIVIDE codestmt .)
    LESSTHAN        reduce using rule 73 (codestmt -> list_funcs DIVIDE codestmt .)
    GREATERTHAN     reduce using rule 73 (codestmt -> list_funcs DIVIDE codestmt .)
    LESSEQUAL       reduce using rule 73 (codestmt -> list_funcs DIVIDE codestmt .)
    GREATEREQUAL    reduce using rule 73 (codestmt -> list_funcs DIVIDE codestmt .)
    NOTEQUAL        reduce using rule 73 (codestmt -> list_funcs DIVIDE codestmt .)
    EQUALEQUAL      reduce using rule 73 (codestmt -> list_funcs DIVIDE codestmt .)
    AND             reduce using rule 73 (codestmt -> list_funcs DIVIDE codestmt .)
    OR              reduce using rule 73 (codestmt -> list_funcs DIVIDE codestmt .)
    SEMICOLON       reduce using rule 73 (codestmt -> list_funcs DIVIDE codestmt .)
    RBRAC           reduce using rule 73 (codestmt -> list_funcs DIVIDE codestmt .)
    COMMA           reduce using rule 73 (codestmt -> list_funcs DIVIDE codestmt .)
    SRBRAC          reduce using rule 73 (codestmt -> list_funcs DIVIDE codestmt .)
    POWER           shift and go to state 37
    INCR            shift and go to state 46
    DECR            shift and go to state 47

  ! POWER           [ reduce using rule 73 (codestmt -> list_funcs DIVIDE codestmt .) ]
  ! INCR            [ reduce using rule 73 (codestmt -> list_funcs DIVIDE codestmt .) ]
  ! DECR            [ reduce using rule 73 (codestmt -> list_funcs DIVIDE codestmt .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! MULTIPLY        [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 35 ]
  ! MOD             [ shift and go to state 36 ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! GREATERTHAN     [ shift and go to state 39 ]
  ! LESSEQUAL       [ shift and go to state 40 ]
  ! GREATEREQUAL    [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! EQUALEQUAL      [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 96

    (74) codestmt -> list_funcs MOD codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    PLUS            reduce using rule 74 (codestmt -> list_funcs MOD codestmt .)
    MINUS           reduce using rule 74 (codestmt -> list_funcs MOD codestmt .)
    MULTIPLY        reduce using rule 74 (codestmt -> list_funcs MOD codestmt .)
    DIVIDE          reduce using rule 74 (codestmt -> list_funcs MOD codestmt .)
    MOD             reduce using rule 74 (codestmt -> list_funcs MOD codestmt .)
    LESSTHAN        reduce using rule 74 (codestmt -> list_funcs MOD codestmt .)
    GREATERTHAN     reduce using rule 74 (codestmt -> list_funcs MOD codestmt .)
    LESSEQUAL       reduce using rule 74 (codestmt -> list_funcs MOD codestmt .)
    GREATEREQUAL    reduce using rule 74 (codestmt -> list_funcs MOD codestmt .)
    NOTEQUAL        reduce using rule 74 (codestmt -> list_funcs MOD codestmt .)
    EQUALEQUAL      reduce using rule 74 (codestmt -> list_funcs MOD codestmt .)
    AND             reduce using rule 74 (codestmt -> list_funcs MOD codestmt .)
    OR              reduce using rule 74 (codestmt -> list_funcs MOD codestmt .)
    SEMICOLON       reduce using rule 74 (codestmt -> list_funcs MOD codestmt .)
    RBRAC           reduce using rule 74 (codestmt -> list_funcs MOD codestmt .)
    COMMA           reduce using rule 74 (codestmt -> list_funcs MOD codestmt .)
    SRBRAC          reduce using rule 74 (codestmt -> list_funcs MOD codestmt .)
    POWER           shift and go to state 37
    INCR            shift and go to state 46
    DECR            shift and go to state 47

  ! POWER           [ reduce using rule 74 (codestmt -> list_funcs MOD codestmt .) ]
  ! INCR            [ reduce using rule 74 (codestmt -> list_funcs MOD codestmt .) ]
  ! DECR            [ reduce using rule 74 (codestmt -> list_funcs MOD codestmt .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! MULTIPLY        [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 35 ]
  ! MOD             [ shift and go to state 36 ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! GREATERTHAN     [ shift and go to state 39 ]
  ! LESSEQUAL       [ shift and go to state 40 ]
  ! GREATEREQUAL    [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! EQUALEQUAL      [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 97

    (75) codestmt -> list_funcs POWER codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    PLUS            reduce using rule 75 (codestmt -> list_funcs POWER codestmt .)
    MINUS           reduce using rule 75 (codestmt -> list_funcs POWER codestmt .)
    MULTIPLY        reduce using rule 75 (codestmt -> list_funcs POWER codestmt .)
    DIVIDE          reduce using rule 75 (codestmt -> list_funcs POWER codestmt .)
    MOD             reduce using rule 75 (codestmt -> list_funcs POWER codestmt .)
    POWER           reduce using rule 75 (codestmt -> list_funcs POWER codestmt .)
    LESSTHAN        reduce using rule 75 (codestmt -> list_funcs POWER codestmt .)
    GREATERTHAN     reduce using rule 75 (codestmt -> list_funcs POWER codestmt .)
    LESSEQUAL       reduce using rule 75 (codestmt -> list_funcs POWER codestmt .)
    GREATEREQUAL    reduce using rule 75 (codestmt -> list_funcs POWER codestmt .)
    NOTEQUAL        reduce using rule 75 (codestmt -> list_funcs POWER codestmt .)
    EQUALEQUAL      reduce using rule 75 (codestmt -> list_funcs POWER codestmt .)
    AND             reduce using rule 75 (codestmt -> list_funcs POWER codestmt .)
    OR              reduce using rule 75 (codestmt -> list_funcs POWER codestmt .)
    SEMICOLON       reduce using rule 75 (codestmt -> list_funcs POWER codestmt .)
    RBRAC           reduce using rule 75 (codestmt -> list_funcs POWER codestmt .)
    COMMA           reduce using rule 75 (codestmt -> list_funcs POWER codestmt .)
    SRBRAC          reduce using rule 75 (codestmt -> list_funcs POWER codestmt .)
    INCR            shift and go to state 46
    DECR            shift and go to state 47

  ! INCR            [ reduce using rule 75 (codestmt -> list_funcs POWER codestmt .) ]
  ! DECR            [ reduce using rule 75 (codestmt -> list_funcs POWER codestmt .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! MULTIPLY        [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 35 ]
  ! MOD             [ shift and go to state 36 ]
  ! POWER           [ shift and go to state 37 ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! GREATERTHAN     [ shift and go to state 39 ]
  ! LESSEQUAL       [ shift and go to state 40 ]
  ! GREATEREQUAL    [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! EQUALEQUAL      [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 98

    (90) codestmt -> LBRAC codestmt RBRAC .

    PLUS            reduce using rule 90 (codestmt -> LBRAC codestmt RBRAC .)
    MINUS           reduce using rule 90 (codestmt -> LBRAC codestmt RBRAC .)
    MULTIPLY        reduce using rule 90 (codestmt -> LBRAC codestmt RBRAC .)
    DIVIDE          reduce using rule 90 (codestmt -> LBRAC codestmt RBRAC .)
    MOD             reduce using rule 90 (codestmt -> LBRAC codestmt RBRAC .)
    POWER           reduce using rule 90 (codestmt -> LBRAC codestmt RBRAC .)
    LESSTHAN        reduce using rule 90 (codestmt -> LBRAC codestmt RBRAC .)
    GREATERTHAN     reduce using rule 90 (codestmt -> LBRAC codestmt RBRAC .)
    LESSEQUAL       reduce using rule 90 (codestmt -> LBRAC codestmt RBRAC .)
    GREATEREQUAL    reduce using rule 90 (codestmt -> LBRAC codestmt RBRAC .)
    NOTEQUAL        reduce using rule 90 (codestmt -> LBRAC codestmt RBRAC .)
    EQUALEQUAL      reduce using rule 90 (codestmt -> LBRAC codestmt RBRAC .)
    AND             reduce using rule 90 (codestmt -> LBRAC codestmt RBRAC .)
    OR              reduce using rule 90 (codestmt -> LBRAC codestmt RBRAC .)
    INCR            reduce using rule 90 (codestmt -> LBRAC codestmt RBRAC .)
    DECR            reduce using rule 90 (codestmt -> LBRAC codestmt RBRAC .)
    SEMICOLON       reduce using rule 90 (codestmt -> LBRAC codestmt RBRAC .)
    RBRAC           reduce using rule 90 (codestmt -> LBRAC codestmt RBRAC .)
    COMMA           reduce using rule 90 (codestmt -> LBRAC codestmt RBRAC .)
    SRBRAC          reduce using rule 90 (codestmt -> LBRAC codestmt RBRAC .)


state 99

    (59) var_assign -> NAME EQUAL codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    SEMICOLON       reduce using rule 59 (var_assign -> NAME EQUAL codestmt .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    MOD             shift and go to state 36
    POWER           shift and go to state 37
    LESSTHAN        shift and go to state 38
    GREATERTHAN     shift and go to state 39
    LESSEQUAL       shift and go to state 40
    GREATEREQUAL    shift and go to state 41
    NOTEQUAL        shift and go to state 42
    EQUALEQUAL      shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45
    INCR            shift and go to state 46
    DECR            shift and go to state 47


state 100

    (15) list_assign -> NAME EQUAL SLBRAC . result SRBRAC
    (52) result -> . printstmt
    (53) result -> . printstmt COMMA result
    (54) result -> . list_access
    (55) result -> . list_access COMMA result
    (56) result -> . list_funcs
    (57) result -> . list_funcs COMMA result
    (58) printstmt -> . codestmt
    (16) list_access -> . NAME SLBRAC INT SRBRAC
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    NAME            shift and go to state 112
    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    result                         shift and go to state 120
    printstmt                      shift and go to state 108
    list_access                    shift and go to state 109
    list_funcs                     shift and go to state 110
    codestmt                       shift and go to state 111
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 101

    (14) list_declare -> NAME FATARROW SLBRAC . SRBRAC

    SRBRAC          shift and go to state 121


state 102

    (16) list_access -> NAME SLBRAC INT . SRBRAC

    SRBRAC          shift and go to state 122


state 103

    (21) list_pop -> NAME DOT POP . LBRAC INT RBRAC

    LBRAC           shift and go to state 123


state 104

    (22) list_push -> NAME DOT PUSH . LBRAC INT RBRAC
    (23) list_push -> NAME DOT PUSH . LBRAC FLOAT RBRAC
    (24) list_push -> NAME DOT PUSH . LBRAC CHAR RBRAC
    (25) list_push -> NAME DOT PUSH . LBRAC STRING RBRAC
    (26) list_push -> NAME DOT PUSH . LBRAC BOOL RBRAC

    LBRAC           shift and go to state 124


state 105

    (27) list_slice -> NAME DOT SLICE . LBRAC sliceval RBRAC

    LBRAC           shift and go to state 125


state 106

    (32) list_index -> NAME DOT INDEX . LBRAC INT RBRAC

    LBRAC           shift and go to state 126


state 107

    (51) output -> PRINT LBRAC result . RBRAC

    RBRAC           shift and go to state 127


state 108

    (52) result -> printstmt .
    (53) result -> printstmt . COMMA result

    RBRAC           reduce using rule 52 (result -> printstmt .)
    SRBRAC          reduce using rule 52 (result -> printstmt .)
    COMMA           shift and go to state 128


state 109

    (54) result -> list_access .
    (55) result -> list_access . COMMA result

    RBRAC           reduce using rule 54 (result -> list_access .)
    SRBRAC          reduce using rule 54 (result -> list_access .)
    COMMA           shift and go to state 129


state 110

    (56) result -> list_funcs .
    (57) result -> list_funcs . COMMA result
    (70) codestmt -> list_funcs . PLUS codestmt
    (71) codestmt -> list_funcs . MINUS codestmt
    (72) codestmt -> list_funcs . MULTIPLY codestmt
    (73) codestmt -> list_funcs . DIVIDE codestmt
    (74) codestmt -> list_funcs . MOD codestmt
    (75) codestmt -> list_funcs . POWER codestmt

    RBRAC           reduce using rule 56 (result -> list_funcs .)
    SRBRAC          reduce using rule 56 (result -> list_funcs .)
    COMMA           shift and go to state 130
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    MULTIPLY        shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55
    POWER           shift and go to state 56


state 111

    (58) printstmt -> codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    COMMA           reduce using rule 58 (printstmt -> codestmt .)
    RBRAC           reduce using rule 58 (printstmt -> codestmt .)
    SRBRAC          reduce using rule 58 (printstmt -> codestmt .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    MOD             shift and go to state 36
    POWER           shift and go to state 37
    LESSTHAN        shift and go to state 38
    GREATERTHAN     shift and go to state 39
    LESSEQUAL       shift and go to state 40
    GREATEREQUAL    shift and go to state 41
    NOTEQUAL        shift and go to state 42
    EQUALEQUAL      shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45
    INCR            shift and go to state 46
    DECR            shift and go to state 47


state 112

    (16) list_access -> NAME . SLBRAC INT SRBRAC
    (94) codestmt -> NAME .
    (21) list_pop -> NAME . DOT POP LBRAC INT RBRAC
    (22) list_push -> NAME . DOT PUSH LBRAC INT RBRAC
    (23) list_push -> NAME . DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> NAME . DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> NAME . DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> NAME . DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> NAME . DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> NAME . DOT INDEX LBRAC INT RBRAC

    SLBRAC          shift and go to state 61
    PLUS            reduce using rule 94 (codestmt -> NAME .)
    MINUS           reduce using rule 94 (codestmt -> NAME .)
    MULTIPLY        reduce using rule 94 (codestmt -> NAME .)
    DIVIDE          reduce using rule 94 (codestmt -> NAME .)
    MOD             reduce using rule 94 (codestmt -> NAME .)
    POWER           reduce using rule 94 (codestmt -> NAME .)
    LESSTHAN        reduce using rule 94 (codestmt -> NAME .)
    GREATERTHAN     reduce using rule 94 (codestmt -> NAME .)
    LESSEQUAL       reduce using rule 94 (codestmt -> NAME .)
    GREATEREQUAL    reduce using rule 94 (codestmt -> NAME .)
    NOTEQUAL        reduce using rule 94 (codestmt -> NAME .)
    EQUALEQUAL      reduce using rule 94 (codestmt -> NAME .)
    AND             reduce using rule 94 (codestmt -> NAME .)
    OR              reduce using rule 94 (codestmt -> NAME .)
    INCR            reduce using rule 94 (codestmt -> NAME .)
    DECR            reduce using rule 94 (codestmt -> NAME .)
    COMMA           reduce using rule 94 (codestmt -> NAME .)
    RBRAC           reduce using rule 94 (codestmt -> NAME .)
    SRBRAC          reduce using rule 94 (codestmt -> NAME .)
    DOT             shift and go to state 62


state 113

    (61) var_declare -> TYPE NAME EQUAL . codestmt
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    codestmt                       shift and go to state 131
    list_funcs                     shift and go to state 49
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 114

    (36) if_exp -> if_statement elif_stmt else_statement .

    SEMICOLON       reduce using rule 36 (if_exp -> if_statement elif_stmt else_statement .)


state 115

    (38) else_statement -> ELSE block .

    SEMICOLON       reduce using rule 38 (else_statement -> ELSE block .)


state 116

    (42) block -> CLBRAC . codeblock CRBRAC
    (43) codeblock -> . code SEMICOLON
    (44) codeblock -> . code SEMICOLON codeblock
    (45) code -> . codestmt
    (46) code -> . var_assign
    (47) code -> . var_declare
    (48) code -> . output
    (49) code -> . list
    (50) code -> . if_exp
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (59) var_assign -> . NAME EQUAL codestmt
    (60) var_declare -> . TYPE NAME
    (61) var_declare -> . TYPE NAME EQUAL codestmt
    (51) output -> . PRINT LBRAC result RBRAC
    (10) list -> . list_declare
    (11) list -> . list_assign
    (12) list -> . list_access
    (13) list -> . list_funcs
    (33) if_exp -> . if_statement
    (34) if_exp -> . if_statement else_statement
    (35) if_exp -> . if_statement elif_stmt
    (36) if_exp -> . if_statement elif_stmt else_statement
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (14) list_declare -> . NAME FATARROW SLBRAC SRBRAC
    (15) list_assign -> . NAME EQUAL SLBRAC result SRBRAC
    (16) list_access -> . NAME SLBRAC INT SRBRAC
    (37) if_statement -> . IF LBRAC codestmt RBRAC block
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 14
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    TYPE            shift and go to state 24
    PRINT           shift and go to state 20
    IF              shift and go to state 30

    codeblock                      shift and go to state 132
    code                           shift and go to state 133
    codestmt                       shift and go to state 134
    var_assign                     shift and go to state 135
    var_declare                    shift and go to state 136
    output                         shift and go to state 137
    list                           shift and go to state 138
    if_exp                         shift and go to state 139
    list_funcs                     shift and go to state 11
    list_declare                   shift and go to state 21
    list_assign                    shift and go to state 22
    list_access                    shift and go to state 23
    if_statement                   shift and go to state 25
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 117

    (40) elif_stmt -> else_if_statement elif_stmt .

    ELSE            reduce using rule 40 (elif_stmt -> else_if_statement elif_stmt .)
    SEMICOLON       reduce using rule 40 (elif_stmt -> else_if_statement elif_stmt .)


state 118

    (41) else_if_statement -> ELSEIF LBRAC . codestmt RBRAC block
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 50
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    codestmt                       shift and go to state 140
    list_funcs                     shift and go to state 49
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 119

    (37) if_statement -> IF LBRAC codestmt . RBRAC block
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    RBRAC           shift and go to state 141
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    MOD             shift and go to state 36
    POWER           shift and go to state 37
    LESSTHAN        shift and go to state 38
    GREATERTHAN     shift and go to state 39
    LESSEQUAL       shift and go to state 40
    GREATEREQUAL    shift and go to state 41
    NOTEQUAL        shift and go to state 42
    EQUALEQUAL      shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45
    INCR            shift and go to state 46
    DECR            shift and go to state 47


state 120

    (15) list_assign -> NAME EQUAL SLBRAC result . SRBRAC

    SRBRAC          shift and go to state 142


state 121

    (14) list_declare -> NAME FATARROW SLBRAC SRBRAC .

    SEMICOLON       reduce using rule 14 (list_declare -> NAME FATARROW SLBRAC SRBRAC .)


state 122

    (16) list_access -> NAME SLBRAC INT SRBRAC .

    SEMICOLON       reduce using rule 16 (list_access -> NAME SLBRAC INT SRBRAC .)
    COMMA           reduce using rule 16 (list_access -> NAME SLBRAC INT SRBRAC .)
    RBRAC           reduce using rule 16 (list_access -> NAME SLBRAC INT SRBRAC .)
    SRBRAC          reduce using rule 16 (list_access -> NAME SLBRAC INT SRBRAC .)


state 123

    (21) list_pop -> NAME DOT POP LBRAC . INT RBRAC

    INT             shift and go to state 143


state 124

    (22) list_push -> NAME DOT PUSH LBRAC . INT RBRAC
    (23) list_push -> NAME DOT PUSH LBRAC . FLOAT RBRAC
    (24) list_push -> NAME DOT PUSH LBRAC . CHAR RBRAC
    (25) list_push -> NAME DOT PUSH LBRAC . STRING RBRAC
    (26) list_push -> NAME DOT PUSH LBRAC . BOOL RBRAC

    INT             shift and go to state 144
    FLOAT           shift and go to state 145
    CHAR            shift and go to state 146
    STRING          shift and go to state 147
    BOOL            shift and go to state 148


state 125

    (27) list_slice -> NAME DOT SLICE LBRAC . sliceval RBRAC
    (28) sliceval -> . INT COLON
    (29) sliceval -> . COLON INT
    (30) sliceval -> . INT COLON INT
    (31) sliceval -> . COLON

    INT             shift and go to state 150
    COLON           shift and go to state 151

    sliceval                       shift and go to state 149

state 126

    (32) list_index -> NAME DOT INDEX LBRAC . INT RBRAC

    INT             shift and go to state 152


state 127

    (51) output -> PRINT LBRAC result RBRAC .

    SEMICOLON       reduce using rule 51 (output -> PRINT LBRAC result RBRAC .)


state 128

    (53) result -> printstmt COMMA . result
    (52) result -> . printstmt
    (53) result -> . printstmt COMMA result
    (54) result -> . list_access
    (55) result -> . list_access COMMA result
    (56) result -> . list_funcs
    (57) result -> . list_funcs COMMA result
    (58) printstmt -> . codestmt
    (16) list_access -> . NAME SLBRAC INT SRBRAC
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    NAME            shift and go to state 112
    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    printstmt                      shift and go to state 108
    result                         shift and go to state 153
    list_access                    shift and go to state 109
    list_funcs                     shift and go to state 110
    codestmt                       shift and go to state 111
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 129

    (55) result -> list_access COMMA . result
    (52) result -> . printstmt
    (53) result -> . printstmt COMMA result
    (54) result -> . list_access
    (55) result -> . list_access COMMA result
    (56) result -> . list_funcs
    (57) result -> . list_funcs COMMA result
    (58) printstmt -> . codestmt
    (16) list_access -> . NAME SLBRAC INT SRBRAC
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    NAME            shift and go to state 112
    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    list_access                    shift and go to state 109
    result                         shift and go to state 154
    printstmt                      shift and go to state 108
    list_funcs                     shift and go to state 110
    codestmt                       shift and go to state 111
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 130

    (57) result -> list_funcs COMMA . result
    (52) result -> . printstmt
    (53) result -> . printstmt COMMA result
    (54) result -> . list_access
    (55) result -> . list_access COMMA result
    (56) result -> . list_funcs
    (57) result -> . list_funcs COMMA result
    (58) printstmt -> . codestmt
    (16) list_access -> . NAME SLBRAC INT SRBRAC
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    NAME            shift and go to state 112
    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19

    list_funcs                     shift and go to state 110
    result                         shift and go to state 155
    printstmt                      shift and go to state 108
    list_access                    shift and go to state 109
    codestmt                       shift and go to state 111
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 131

    (61) var_declare -> TYPE NAME EQUAL codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    SEMICOLON       reduce using rule 61 (var_declare -> TYPE NAME EQUAL codestmt .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    MOD             shift and go to state 36
    POWER           shift and go to state 37
    LESSTHAN        shift and go to state 38
    GREATERTHAN     shift and go to state 39
    LESSEQUAL       shift and go to state 40
    GREATEREQUAL    shift and go to state 41
    NOTEQUAL        shift and go to state 42
    EQUALEQUAL      shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45
    INCR            shift and go to state 46
    DECR            shift and go to state 47


state 132

    (42) block -> CLBRAC codeblock . CRBRAC

    CRBRAC          shift and go to state 156


state 133

    (43) codeblock -> code . SEMICOLON
    (44) codeblock -> code . SEMICOLON codeblock

    SEMICOLON       shift and go to state 157


state 134

    (45) code -> codestmt .
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    SEMICOLON       reduce using rule 45 (code -> codestmt .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    MOD             shift and go to state 36
    POWER           shift and go to state 37
    LESSTHAN        shift and go to state 38
    GREATERTHAN     shift and go to state 39
    LESSEQUAL       shift and go to state 40
    GREATEREQUAL    shift and go to state 41
    NOTEQUAL        shift and go to state 42
    EQUALEQUAL      shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45
    INCR            shift and go to state 46
    DECR            shift and go to state 47


state 135

    (46) code -> var_assign .

    SEMICOLON       reduce using rule 46 (code -> var_assign .)


state 136

    (47) code -> var_declare .

    SEMICOLON       reduce using rule 47 (code -> var_declare .)


state 137

    (48) code -> output .

    SEMICOLON       reduce using rule 48 (code -> output .)


state 138

    (49) code -> list .

    SEMICOLON       reduce using rule 49 (code -> list .)


state 139

    (50) code -> if_exp .

    SEMICOLON       reduce using rule 50 (code -> if_exp .)


state 140

    (41) else_if_statement -> ELSEIF LBRAC codestmt . RBRAC block
    (64) codestmt -> codestmt . PLUS codestmt
    (65) codestmt -> codestmt . MINUS codestmt
    (66) codestmt -> codestmt . MULTIPLY codestmt
    (67) codestmt -> codestmt . DIVIDE codestmt
    (68) codestmt -> codestmt . MOD codestmt
    (69) codestmt -> codestmt . POWER codestmt
    (76) codestmt -> codestmt . PLUS list_funcs
    (77) codestmt -> codestmt . MINUS list_funcs
    (78) codestmt -> codestmt . MULTIPLY list_funcs
    (79) codestmt -> codestmt . DIVIDE list_funcs
    (80) codestmt -> codestmt . MOD list_funcs
    (81) codestmt -> codestmt . POWER list_funcs
    (82) codestmt -> codestmt . LESSTHAN codestmt
    (83) codestmt -> codestmt . GREATERTHAN codestmt
    (84) codestmt -> codestmt . LESSEQUAL codestmt
    (85) codestmt -> codestmt . GREATEREQUAL codestmt
    (86) codestmt -> codestmt . NOTEQUAL codestmt
    (87) codestmt -> codestmt . EQUALEQUAL codestmt
    (88) codestmt -> codestmt . AND codestmt
    (89) codestmt -> codestmt . OR codestmt
    (92) codestmt -> codestmt . INCR
    (93) codestmt -> codestmt . DECR

    RBRAC           shift and go to state 158
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    MOD             shift and go to state 36
    POWER           shift and go to state 37
    LESSTHAN        shift and go to state 38
    GREATERTHAN     shift and go to state 39
    LESSEQUAL       shift and go to state 40
    GREATEREQUAL    shift and go to state 41
    NOTEQUAL        shift and go to state 42
    EQUALEQUAL      shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45
    INCR            shift and go to state 46
    DECR            shift and go to state 47


state 141

    (37) if_statement -> IF LBRAC codestmt RBRAC . block
    (42) block -> . CLBRAC codeblock CRBRAC

    CLBRAC          shift and go to state 116

    block                          shift and go to state 159

state 142

    (15) list_assign -> NAME EQUAL SLBRAC result SRBRAC .

    SEMICOLON       reduce using rule 15 (list_assign -> NAME EQUAL SLBRAC result SRBRAC .)


state 143

    (21) list_pop -> NAME DOT POP LBRAC INT . RBRAC

    RBRAC           shift and go to state 160


state 144

    (22) list_push -> NAME DOT PUSH LBRAC INT . RBRAC

    RBRAC           shift and go to state 161


state 145

    (23) list_push -> NAME DOT PUSH LBRAC FLOAT . RBRAC

    RBRAC           shift and go to state 162


state 146

    (24) list_push -> NAME DOT PUSH LBRAC CHAR . RBRAC

    RBRAC           shift and go to state 163


state 147

    (25) list_push -> NAME DOT PUSH LBRAC STRING . RBRAC

    RBRAC           shift and go to state 164


state 148

    (26) list_push -> NAME DOT PUSH LBRAC BOOL . RBRAC

    RBRAC           shift and go to state 165


state 149

    (27) list_slice -> NAME DOT SLICE LBRAC sliceval . RBRAC

    RBRAC           shift and go to state 166


state 150

    (28) sliceval -> INT . COLON
    (30) sliceval -> INT . COLON INT

    COLON           shift and go to state 167


state 151

    (29) sliceval -> COLON . INT
    (31) sliceval -> COLON .

    INT             shift and go to state 168
    RBRAC           reduce using rule 31 (sliceval -> COLON .)


state 152

    (32) list_index -> NAME DOT INDEX LBRAC INT . RBRAC

    RBRAC           shift and go to state 169


state 153

    (53) result -> printstmt COMMA result .

    RBRAC           reduce using rule 53 (result -> printstmt COMMA result .)
    SRBRAC          reduce using rule 53 (result -> printstmt COMMA result .)


state 154

    (55) result -> list_access COMMA result .

    RBRAC           reduce using rule 55 (result -> list_access COMMA result .)
    SRBRAC          reduce using rule 55 (result -> list_access COMMA result .)


state 155

    (57) result -> list_funcs COMMA result .

    RBRAC           reduce using rule 57 (result -> list_funcs COMMA result .)
    SRBRAC          reduce using rule 57 (result -> list_funcs COMMA result .)


state 156

    (42) block -> CLBRAC codeblock CRBRAC .

    SEMICOLON       reduce using rule 42 (block -> CLBRAC codeblock CRBRAC .)
    ELSE            reduce using rule 42 (block -> CLBRAC codeblock CRBRAC .)
    ELSEIF          reduce using rule 42 (block -> CLBRAC codeblock CRBRAC .)


state 157

    (43) codeblock -> code SEMICOLON .
    (44) codeblock -> code SEMICOLON . codeblock
    (43) codeblock -> . code SEMICOLON
    (44) codeblock -> . code SEMICOLON codeblock
    (45) code -> . codestmt
    (46) code -> . var_assign
    (47) code -> . var_declare
    (48) code -> . output
    (49) code -> . list
    (50) code -> . if_exp
    (63) codestmt -> . MINUS codestmt
    (64) codestmt -> . codestmt PLUS codestmt
    (65) codestmt -> . codestmt MINUS codestmt
    (66) codestmt -> . codestmt MULTIPLY codestmt
    (67) codestmt -> . codestmt DIVIDE codestmt
    (68) codestmt -> . codestmt MOD codestmt
    (69) codestmt -> . codestmt POWER codestmt
    (70) codestmt -> . list_funcs PLUS codestmt
    (71) codestmt -> . list_funcs MINUS codestmt
    (72) codestmt -> . list_funcs MULTIPLY codestmt
    (73) codestmt -> . list_funcs DIVIDE codestmt
    (74) codestmt -> . list_funcs MOD codestmt
    (75) codestmt -> . list_funcs POWER codestmt
    (76) codestmt -> . codestmt PLUS list_funcs
    (77) codestmt -> . codestmt MINUS list_funcs
    (78) codestmt -> . codestmt MULTIPLY list_funcs
    (79) codestmt -> . codestmt DIVIDE list_funcs
    (80) codestmt -> . codestmt MOD list_funcs
    (81) codestmt -> . codestmt POWER list_funcs
    (82) codestmt -> . codestmt LESSTHAN codestmt
    (83) codestmt -> . codestmt GREATERTHAN codestmt
    (84) codestmt -> . codestmt LESSEQUAL codestmt
    (85) codestmt -> . codestmt GREATEREQUAL codestmt
    (86) codestmt -> . codestmt NOTEQUAL codestmt
    (87) codestmt -> . codestmt EQUALEQUAL codestmt
    (88) codestmt -> . codestmt AND codestmt
    (89) codestmt -> . codestmt OR codestmt
    (90) codestmt -> . LBRAC codestmt RBRAC
    (91) codestmt -> . NOT codestmt
    (92) codestmt -> . codestmt INCR
    (93) codestmt -> . codestmt DECR
    (94) codestmt -> . NAME
    (95) codestmt -> . BOOL
    (96) codestmt -> . CHAR
    (97) codestmt -> . STRING
    (98) codestmt -> . INT
    (99) codestmt -> . FLOAT
    (59) var_assign -> . NAME EQUAL codestmt
    (60) var_declare -> . TYPE NAME
    (61) var_declare -> . TYPE NAME EQUAL codestmt
    (51) output -> . PRINT LBRAC result RBRAC
    (10) list -> . list_declare
    (11) list -> . list_assign
    (12) list -> . list_access
    (13) list -> . list_funcs
    (33) if_exp -> . if_statement
    (34) if_exp -> . if_statement else_statement
    (35) if_exp -> . if_statement elif_stmt
    (36) if_exp -> . if_statement elif_stmt else_statement
    (17) list_funcs -> . list_pop
    (18) list_funcs -> . list_push
    (19) list_funcs -> . list_slice
    (20) list_funcs -> . list_index
    (14) list_declare -> . NAME FATARROW SLBRAC SRBRAC
    (15) list_assign -> . NAME EQUAL SLBRAC result SRBRAC
    (16) list_access -> . NAME SLBRAC INT SRBRAC
    (37) if_statement -> . IF LBRAC codestmt RBRAC block
    (21) list_pop -> . NAME DOT POP LBRAC INT RBRAC
    (22) list_push -> . NAME DOT PUSH LBRAC INT RBRAC
    (23) list_push -> . NAME DOT PUSH LBRAC FLOAT RBRAC
    (24) list_push -> . NAME DOT PUSH LBRAC CHAR RBRAC
    (25) list_push -> . NAME DOT PUSH LBRAC STRING RBRAC
    (26) list_push -> . NAME DOT PUSH LBRAC BOOL RBRAC
    (27) list_slice -> . NAME DOT SLICE LBRAC sliceval RBRAC
    (32) list_index -> . NAME DOT INDEX LBRAC INT RBRAC

    CRBRAC          reduce using rule 43 (codeblock -> code SEMICOLON .)
    MINUS           shift and go to state 10
    LBRAC           shift and go to state 12
    NOT             shift and go to state 13
    NAME            shift and go to state 14
    BOOL            shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    TYPE            shift and go to state 24
    PRINT           shift and go to state 20
    IF              shift and go to state 30

    code                           shift and go to state 133
    codeblock                      shift and go to state 170
    codestmt                       shift and go to state 134
    var_assign                     shift and go to state 135
    var_declare                    shift and go to state 136
    output                         shift and go to state 137
    list                           shift and go to state 138
    if_exp                         shift and go to state 139
    list_funcs                     shift and go to state 11
    list_declare                   shift and go to state 21
    list_assign                    shift and go to state 22
    list_access                    shift and go to state 23
    if_statement                   shift and go to state 25
    list_pop                       shift and go to state 26
    list_push                      shift and go to state 27
    list_slice                     shift and go to state 28
    list_index                     shift and go to state 29

state 158

    (41) else_if_statement -> ELSEIF LBRAC codestmt RBRAC . block
    (42) block -> . CLBRAC codeblock CRBRAC

    CLBRAC          shift and go to state 116

    block                          shift and go to state 171

state 159

    (37) if_statement -> IF LBRAC codestmt RBRAC block .

    ELSE            reduce using rule 37 (if_statement -> IF LBRAC codestmt RBRAC block .)
    ELSEIF          reduce using rule 37 (if_statement -> IF LBRAC codestmt RBRAC block .)
    SEMICOLON       reduce using rule 37 (if_statement -> IF LBRAC codestmt RBRAC block .)


state 160

    (21) list_pop -> NAME DOT POP LBRAC INT RBRAC .

    PLUS            reduce using rule 21 (list_pop -> NAME DOT POP LBRAC INT RBRAC .)
    MINUS           reduce using rule 21 (list_pop -> NAME DOT POP LBRAC INT RBRAC .)
    MULTIPLY        reduce using rule 21 (list_pop -> NAME DOT POP LBRAC INT RBRAC .)
    DIVIDE          reduce using rule 21 (list_pop -> NAME DOT POP LBRAC INT RBRAC .)
    MOD             reduce using rule 21 (list_pop -> NAME DOT POP LBRAC INT RBRAC .)
    POWER           reduce using rule 21 (list_pop -> NAME DOT POP LBRAC INT RBRAC .)
    SEMICOLON       reduce using rule 21 (list_pop -> NAME DOT POP LBRAC INT RBRAC .)
    LESSTHAN        reduce using rule 21 (list_pop -> NAME DOT POP LBRAC INT RBRAC .)
    GREATERTHAN     reduce using rule 21 (list_pop -> NAME DOT POP LBRAC INT RBRAC .)
    LESSEQUAL       reduce using rule 21 (list_pop -> NAME DOT POP LBRAC INT RBRAC .)
    GREATEREQUAL    reduce using rule 21 (list_pop -> NAME DOT POP LBRAC INT RBRAC .)
    NOTEQUAL        reduce using rule 21 (list_pop -> NAME DOT POP LBRAC INT RBRAC .)
    EQUALEQUAL      reduce using rule 21 (list_pop -> NAME DOT POP LBRAC INT RBRAC .)
    AND             reduce using rule 21 (list_pop -> NAME DOT POP LBRAC INT RBRAC .)
    OR              reduce using rule 21 (list_pop -> NAME DOT POP LBRAC INT RBRAC .)
    INCR            reduce using rule 21 (list_pop -> NAME DOT POP LBRAC INT RBRAC .)
    DECR            reduce using rule 21 (list_pop -> NAME DOT POP LBRAC INT RBRAC .)
    RBRAC           reduce using rule 21 (list_pop -> NAME DOT POP LBRAC INT RBRAC .)
    COMMA           reduce using rule 21 (list_pop -> NAME DOT POP LBRAC INT RBRAC .)
    SRBRAC          reduce using rule 21 (list_pop -> NAME DOT POP LBRAC INT RBRAC .)


state 161

    (22) list_push -> NAME DOT PUSH LBRAC INT RBRAC .

    PLUS            reduce using rule 22 (list_push -> NAME DOT PUSH LBRAC INT RBRAC .)
    MINUS           reduce using rule 22 (list_push -> NAME DOT PUSH LBRAC INT RBRAC .)
    MULTIPLY        reduce using rule 22 (list_push -> NAME DOT PUSH LBRAC INT RBRAC .)
    DIVIDE          reduce using rule 22 (list_push -> NAME DOT PUSH LBRAC INT RBRAC .)
    MOD             reduce using rule 22 (list_push -> NAME DOT PUSH LBRAC INT RBRAC .)
    POWER           reduce using rule 22 (list_push -> NAME DOT PUSH LBRAC INT RBRAC .)
    SEMICOLON       reduce using rule 22 (list_push -> NAME DOT PUSH LBRAC INT RBRAC .)
    LESSTHAN        reduce using rule 22 (list_push -> NAME DOT PUSH LBRAC INT RBRAC .)
    GREATERTHAN     reduce using rule 22 (list_push -> NAME DOT PUSH LBRAC INT RBRAC .)
    LESSEQUAL       reduce using rule 22 (list_push -> NAME DOT PUSH LBRAC INT RBRAC .)
    GREATEREQUAL    reduce using rule 22 (list_push -> NAME DOT PUSH LBRAC INT RBRAC .)
    NOTEQUAL        reduce using rule 22 (list_push -> NAME DOT PUSH LBRAC INT RBRAC .)
    EQUALEQUAL      reduce using rule 22 (list_push -> NAME DOT PUSH LBRAC INT RBRAC .)
    AND             reduce using rule 22 (list_push -> NAME DOT PUSH LBRAC INT RBRAC .)
    OR              reduce using rule 22 (list_push -> NAME DOT PUSH LBRAC INT RBRAC .)
    INCR            reduce using rule 22 (list_push -> NAME DOT PUSH LBRAC INT RBRAC .)
    DECR            reduce using rule 22 (list_push -> NAME DOT PUSH LBRAC INT RBRAC .)
    RBRAC           reduce using rule 22 (list_push -> NAME DOT PUSH LBRAC INT RBRAC .)
    COMMA           reduce using rule 22 (list_push -> NAME DOT PUSH LBRAC INT RBRAC .)
    SRBRAC          reduce using rule 22 (list_push -> NAME DOT PUSH LBRAC INT RBRAC .)


state 162

    (23) list_push -> NAME DOT PUSH LBRAC FLOAT RBRAC .

    PLUS            reduce using rule 23 (list_push -> NAME DOT PUSH LBRAC FLOAT RBRAC .)
    MINUS           reduce using rule 23 (list_push -> NAME DOT PUSH LBRAC FLOAT RBRAC .)
    MULTIPLY        reduce using rule 23 (list_push -> NAME DOT PUSH LBRAC FLOAT RBRAC .)
    DIVIDE          reduce using rule 23 (list_push -> NAME DOT PUSH LBRAC FLOAT RBRAC .)
    MOD             reduce using rule 23 (list_push -> NAME DOT PUSH LBRAC FLOAT RBRAC .)
    POWER           reduce using rule 23 (list_push -> NAME DOT PUSH LBRAC FLOAT RBRAC .)
    SEMICOLON       reduce using rule 23 (list_push -> NAME DOT PUSH LBRAC FLOAT RBRAC .)
    LESSTHAN        reduce using rule 23 (list_push -> NAME DOT PUSH LBRAC FLOAT RBRAC .)
    GREATERTHAN     reduce using rule 23 (list_push -> NAME DOT PUSH LBRAC FLOAT RBRAC .)
    LESSEQUAL       reduce using rule 23 (list_push -> NAME DOT PUSH LBRAC FLOAT RBRAC .)
    GREATEREQUAL    reduce using rule 23 (list_push -> NAME DOT PUSH LBRAC FLOAT RBRAC .)
    NOTEQUAL        reduce using rule 23 (list_push -> NAME DOT PUSH LBRAC FLOAT RBRAC .)
    EQUALEQUAL      reduce using rule 23 (list_push -> NAME DOT PUSH LBRAC FLOAT RBRAC .)
    AND             reduce using rule 23 (list_push -> NAME DOT PUSH LBRAC FLOAT RBRAC .)
    OR              reduce using rule 23 (list_push -> NAME DOT PUSH LBRAC FLOAT RBRAC .)
    INCR            reduce using rule 23 (list_push -> NAME DOT PUSH LBRAC FLOAT RBRAC .)
    DECR            reduce using rule 23 (list_push -> NAME DOT PUSH LBRAC FLOAT RBRAC .)
    RBRAC           reduce using rule 23 (list_push -> NAME DOT PUSH LBRAC FLOAT RBRAC .)
    COMMA           reduce using rule 23 (list_push -> NAME DOT PUSH LBRAC FLOAT RBRAC .)
    SRBRAC          reduce using rule 23 (list_push -> NAME DOT PUSH LBRAC FLOAT RBRAC .)


state 163

    (24) list_push -> NAME DOT PUSH LBRAC CHAR RBRAC .

    PLUS            reduce using rule 24 (list_push -> NAME DOT PUSH LBRAC CHAR RBRAC .)
    MINUS           reduce using rule 24 (list_push -> NAME DOT PUSH LBRAC CHAR RBRAC .)
    MULTIPLY        reduce using rule 24 (list_push -> NAME DOT PUSH LBRAC CHAR RBRAC .)
    DIVIDE          reduce using rule 24 (list_push -> NAME DOT PUSH LBRAC CHAR RBRAC .)
    MOD             reduce using rule 24 (list_push -> NAME DOT PUSH LBRAC CHAR RBRAC .)
    POWER           reduce using rule 24 (list_push -> NAME DOT PUSH LBRAC CHAR RBRAC .)
    SEMICOLON       reduce using rule 24 (list_push -> NAME DOT PUSH LBRAC CHAR RBRAC .)
    LESSTHAN        reduce using rule 24 (list_push -> NAME DOT PUSH LBRAC CHAR RBRAC .)
    GREATERTHAN     reduce using rule 24 (list_push -> NAME DOT PUSH LBRAC CHAR RBRAC .)
    LESSEQUAL       reduce using rule 24 (list_push -> NAME DOT PUSH LBRAC CHAR RBRAC .)
    GREATEREQUAL    reduce using rule 24 (list_push -> NAME DOT PUSH LBRAC CHAR RBRAC .)
    NOTEQUAL        reduce using rule 24 (list_push -> NAME DOT PUSH LBRAC CHAR RBRAC .)
    EQUALEQUAL      reduce using rule 24 (list_push -> NAME DOT PUSH LBRAC CHAR RBRAC .)
    AND             reduce using rule 24 (list_push -> NAME DOT PUSH LBRAC CHAR RBRAC .)
    OR              reduce using rule 24 (list_push -> NAME DOT PUSH LBRAC CHAR RBRAC .)
    INCR            reduce using rule 24 (list_push -> NAME DOT PUSH LBRAC CHAR RBRAC .)
    DECR            reduce using rule 24 (list_push -> NAME DOT PUSH LBRAC CHAR RBRAC .)
    RBRAC           reduce using rule 24 (list_push -> NAME DOT PUSH LBRAC CHAR RBRAC .)
    COMMA           reduce using rule 24 (list_push -> NAME DOT PUSH LBRAC CHAR RBRAC .)
    SRBRAC          reduce using rule 24 (list_push -> NAME DOT PUSH LBRAC CHAR RBRAC .)


state 164

    (25) list_push -> NAME DOT PUSH LBRAC STRING RBRAC .

    PLUS            reduce using rule 25 (list_push -> NAME DOT PUSH LBRAC STRING RBRAC .)
    MINUS           reduce using rule 25 (list_push -> NAME DOT PUSH LBRAC STRING RBRAC .)
    MULTIPLY        reduce using rule 25 (list_push -> NAME DOT PUSH LBRAC STRING RBRAC .)
    DIVIDE          reduce using rule 25 (list_push -> NAME DOT PUSH LBRAC STRING RBRAC .)
    MOD             reduce using rule 25 (list_push -> NAME DOT PUSH LBRAC STRING RBRAC .)
    POWER           reduce using rule 25 (list_push -> NAME DOT PUSH LBRAC STRING RBRAC .)
    SEMICOLON       reduce using rule 25 (list_push -> NAME DOT PUSH LBRAC STRING RBRAC .)
    LESSTHAN        reduce using rule 25 (list_push -> NAME DOT PUSH LBRAC STRING RBRAC .)
    GREATERTHAN     reduce using rule 25 (list_push -> NAME DOT PUSH LBRAC STRING RBRAC .)
    LESSEQUAL       reduce using rule 25 (list_push -> NAME DOT PUSH LBRAC STRING RBRAC .)
    GREATEREQUAL    reduce using rule 25 (list_push -> NAME DOT PUSH LBRAC STRING RBRAC .)
    NOTEQUAL        reduce using rule 25 (list_push -> NAME DOT PUSH LBRAC STRING RBRAC .)
    EQUALEQUAL      reduce using rule 25 (list_push -> NAME DOT PUSH LBRAC STRING RBRAC .)
    AND             reduce using rule 25 (list_push -> NAME DOT PUSH LBRAC STRING RBRAC .)
    OR              reduce using rule 25 (list_push -> NAME DOT PUSH LBRAC STRING RBRAC .)
    INCR            reduce using rule 25 (list_push -> NAME DOT PUSH LBRAC STRING RBRAC .)
    DECR            reduce using rule 25 (list_push -> NAME DOT PUSH LBRAC STRING RBRAC .)
    RBRAC           reduce using rule 25 (list_push -> NAME DOT PUSH LBRAC STRING RBRAC .)
    COMMA           reduce using rule 25 (list_push -> NAME DOT PUSH LBRAC STRING RBRAC .)
    SRBRAC          reduce using rule 25 (list_push -> NAME DOT PUSH LBRAC STRING RBRAC .)


state 165

    (26) list_push -> NAME DOT PUSH LBRAC BOOL RBRAC .

    PLUS            reduce using rule 26 (list_push -> NAME DOT PUSH LBRAC BOOL RBRAC .)
    MINUS           reduce using rule 26 (list_push -> NAME DOT PUSH LBRAC BOOL RBRAC .)
    MULTIPLY        reduce using rule 26 (list_push -> NAME DOT PUSH LBRAC BOOL RBRAC .)
    DIVIDE          reduce using rule 26 (list_push -> NAME DOT PUSH LBRAC BOOL RBRAC .)
    MOD             reduce using rule 26 (list_push -> NAME DOT PUSH LBRAC BOOL RBRAC .)
    POWER           reduce using rule 26 (list_push -> NAME DOT PUSH LBRAC BOOL RBRAC .)
    SEMICOLON       reduce using rule 26 (list_push -> NAME DOT PUSH LBRAC BOOL RBRAC .)
    LESSTHAN        reduce using rule 26 (list_push -> NAME DOT PUSH LBRAC BOOL RBRAC .)
    GREATERTHAN     reduce using rule 26 (list_push -> NAME DOT PUSH LBRAC BOOL RBRAC .)
    LESSEQUAL       reduce using rule 26 (list_push -> NAME DOT PUSH LBRAC BOOL RBRAC .)
    GREATEREQUAL    reduce using rule 26 (list_push -> NAME DOT PUSH LBRAC BOOL RBRAC .)
    NOTEQUAL        reduce using rule 26 (list_push -> NAME DOT PUSH LBRAC BOOL RBRAC .)
    EQUALEQUAL      reduce using rule 26 (list_push -> NAME DOT PUSH LBRAC BOOL RBRAC .)
    AND             reduce using rule 26 (list_push -> NAME DOT PUSH LBRAC BOOL RBRAC .)
    OR              reduce using rule 26 (list_push -> NAME DOT PUSH LBRAC BOOL RBRAC .)
    INCR            reduce using rule 26 (list_push -> NAME DOT PUSH LBRAC BOOL RBRAC .)
    DECR            reduce using rule 26 (list_push -> NAME DOT PUSH LBRAC BOOL RBRAC .)
    RBRAC           reduce using rule 26 (list_push -> NAME DOT PUSH LBRAC BOOL RBRAC .)
    COMMA           reduce using rule 26 (list_push -> NAME DOT PUSH LBRAC BOOL RBRAC .)
    SRBRAC          reduce using rule 26 (list_push -> NAME DOT PUSH LBRAC BOOL RBRAC .)


state 166

    (27) list_slice -> NAME DOT SLICE LBRAC sliceval RBRAC .

    PLUS            reduce using rule 27 (list_slice -> NAME DOT SLICE LBRAC sliceval RBRAC .)
    MINUS           reduce using rule 27 (list_slice -> NAME DOT SLICE LBRAC sliceval RBRAC .)
    MULTIPLY        reduce using rule 27 (list_slice -> NAME DOT SLICE LBRAC sliceval RBRAC .)
    DIVIDE          reduce using rule 27 (list_slice -> NAME DOT SLICE LBRAC sliceval RBRAC .)
    MOD             reduce using rule 27 (list_slice -> NAME DOT SLICE LBRAC sliceval RBRAC .)
    POWER           reduce using rule 27 (list_slice -> NAME DOT SLICE LBRAC sliceval RBRAC .)
    SEMICOLON       reduce using rule 27 (list_slice -> NAME DOT SLICE LBRAC sliceval RBRAC .)
    LESSTHAN        reduce using rule 27 (list_slice -> NAME DOT SLICE LBRAC sliceval RBRAC .)
    GREATERTHAN     reduce using rule 27 (list_slice -> NAME DOT SLICE LBRAC sliceval RBRAC .)
    LESSEQUAL       reduce using rule 27 (list_slice -> NAME DOT SLICE LBRAC sliceval RBRAC .)
    GREATEREQUAL    reduce using rule 27 (list_slice -> NAME DOT SLICE LBRAC sliceval RBRAC .)
    NOTEQUAL        reduce using rule 27 (list_slice -> NAME DOT SLICE LBRAC sliceval RBRAC .)
    EQUALEQUAL      reduce using rule 27 (list_slice -> NAME DOT SLICE LBRAC sliceval RBRAC .)
    AND             reduce using rule 27 (list_slice -> NAME DOT SLICE LBRAC sliceval RBRAC .)
    OR              reduce using rule 27 (list_slice -> NAME DOT SLICE LBRAC sliceval RBRAC .)
    INCR            reduce using rule 27 (list_slice -> NAME DOT SLICE LBRAC sliceval RBRAC .)
    DECR            reduce using rule 27 (list_slice -> NAME DOT SLICE LBRAC sliceval RBRAC .)
    RBRAC           reduce using rule 27 (list_slice -> NAME DOT SLICE LBRAC sliceval RBRAC .)
    COMMA           reduce using rule 27 (list_slice -> NAME DOT SLICE LBRAC sliceval RBRAC .)
    SRBRAC          reduce using rule 27 (list_slice -> NAME DOT SLICE LBRAC sliceval RBRAC .)


state 167

    (28) sliceval -> INT COLON .
    (30) sliceval -> INT COLON . INT

    RBRAC           reduce using rule 28 (sliceval -> INT COLON .)
    INT             shift and go to state 172


state 168

    (29) sliceval -> COLON INT .

    RBRAC           reduce using rule 29 (sliceval -> COLON INT .)


state 169

    (32) list_index -> NAME DOT INDEX LBRAC INT RBRAC .

    PLUS            reduce using rule 32 (list_index -> NAME DOT INDEX LBRAC INT RBRAC .)
    MINUS           reduce using rule 32 (list_index -> NAME DOT INDEX LBRAC INT RBRAC .)
    MULTIPLY        reduce using rule 32 (list_index -> NAME DOT INDEX LBRAC INT RBRAC .)
    DIVIDE          reduce using rule 32 (list_index -> NAME DOT INDEX LBRAC INT RBRAC .)
    MOD             reduce using rule 32 (list_index -> NAME DOT INDEX LBRAC INT RBRAC .)
    POWER           reduce using rule 32 (list_index -> NAME DOT INDEX LBRAC INT RBRAC .)
    SEMICOLON       reduce using rule 32 (list_index -> NAME DOT INDEX LBRAC INT RBRAC .)
    LESSTHAN        reduce using rule 32 (list_index -> NAME DOT INDEX LBRAC INT RBRAC .)
    GREATERTHAN     reduce using rule 32 (list_index -> NAME DOT INDEX LBRAC INT RBRAC .)
    LESSEQUAL       reduce using rule 32 (list_index -> NAME DOT INDEX LBRAC INT RBRAC .)
    GREATEREQUAL    reduce using rule 32 (list_index -> NAME DOT INDEX LBRAC INT RBRAC .)
    NOTEQUAL        reduce using rule 32 (list_index -> NAME DOT INDEX LBRAC INT RBRAC .)
    EQUALEQUAL      reduce using rule 32 (list_index -> NAME DOT INDEX LBRAC INT RBRAC .)
    AND             reduce using rule 32 (list_index -> NAME DOT INDEX LBRAC INT RBRAC .)
    OR              reduce using rule 32 (list_index -> NAME DOT INDEX LBRAC INT RBRAC .)
    INCR            reduce using rule 32 (list_index -> NAME DOT INDEX LBRAC INT RBRAC .)
    DECR            reduce using rule 32 (list_index -> NAME DOT INDEX LBRAC INT RBRAC .)
    RBRAC           reduce using rule 32 (list_index -> NAME DOT INDEX LBRAC INT RBRAC .)
    COMMA           reduce using rule 32 (list_index -> NAME DOT INDEX LBRAC INT RBRAC .)
    SRBRAC          reduce using rule 32 (list_index -> NAME DOT INDEX LBRAC INT RBRAC .)


state 170

    (44) codeblock -> code SEMICOLON codeblock .

    CRBRAC          reduce using rule 44 (codeblock -> code SEMICOLON codeblock .)


state 171

    (41) else_if_statement -> ELSEIF LBRAC codestmt RBRAC block .

    ELSEIF          reduce using rule 41 (else_if_statement -> ELSEIF LBRAC codestmt RBRAC block .)
    ELSE            reduce using rule 41 (else_if_statement -> ELSEIF LBRAC codestmt RBRAC block .)
    SEMICOLON       reduce using rule 41 (else_if_statement -> ELSEIF LBRAC codestmt RBRAC block .)


state 172

    (30) sliceval -> INT COLON INT .

    RBRAC           reduce using rule 30 (sliceval -> INT COLON INT .)

